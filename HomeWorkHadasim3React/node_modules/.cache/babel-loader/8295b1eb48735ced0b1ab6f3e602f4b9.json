{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\ExternalProject\\\\ProfileCustomerReact\\\\src\\\\Components\\\\CompanyUpdate.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { updateCompany, getCompanyByCode } from '../Redux/Companies/CompaniesThunk';\nimport { MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CompanyUpdate(codeCompany) {\n  _s();\n\n  console.log(\"code\");\n  console.log(codeCompany);\n  const [modal14, setModal14] = useState(true);\n  const [errors, setErrors] = useState({\n    PrivateEmail: \"שדה חובה\",\n    UserName: \"שדה חובה\",\n    UserPassword: \"שדה חובה\"\n  });\n  const [company, setCompany] = useState(!codeCompany.company ? {} : codeCompany.company);\n  const dispatch = useDispatch();\n  let [c2, setC2] = useState({});\n  useEffect(async () => {\n    debugger;\n    let c1 = await getCompanyByCode(dispatch, codeCompany);\n    console.log(\"c1\");\n    console.log(c1);\n    setC2(c1);\n  }, []);\n\n  const updateCompany = async () => {\n    let NameCompany = document.getElementById(\"NameCompany\").value;\n    let PrivateEmail = document.getElementById(\"PrivateEmail\").value;\n    let CustomerServiceEmail = document.getElementById(\"CustomerServiceEmail\").value;\n    let CustomerServiceEmailPassword = document.getElementById(\"CustomerServiceEmailPassword\").value;\n    let UserName = document.getElementById(\"UserName\").value;\n    let UserPassword = document.getElementById(\"UserPassword\").value;\n\n    if (PrivateEmail && UserName && UserPassword) {\n      const company = await updateCompany(dispatch, NameCompany, PrivateEmail, CustomerServiceEmail, CustomerServiceEmailPassword, UserName, UserPassword);\n      alert(\"הפרטים עודכנו בהצלחה\");\n      setModal14(!modal14);\n      return company;\n    } else {\n      alert(\"אנא מלא את כל השדות \");\n    }\n  }; //בדיקת תקינות של שם\n\n\n  const validateName = event => {\n    if (!event.target.value) setErrors({ ...errors,\n      UserName: \"שדה חובה\"\n    });else if (event.target.value.includes(\" \")) setErrors({ ...errors,\n      UserName: \"אין לשים רווח\"\n    });else {\n      setErrors({ ...errors,\n        UserName: \"תקין!\"\n      });\n    }\n    setCompany({ ...company,\n      UserName: event.target.value\n    });\n  }; //בדיקת תקינות של סיסמא\n\n\n  const validatePass = event => {\n    var passw = /^[A-Za-z]\\w{7,14}$/;\n\n    if (event.target.value.match(passw)) {\n      setErrors({ ...errors,\n        pass: \"תקין!\"\n      });\n    } else {\n      setErrors({ ...errors,\n        pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter'\n      });\n    }\n\n    setCompany({ ...company,\n      UserPassword: event.target.value\n    });\n  };\n\n  const up = e => {\n    setC2(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: /*#__PURE__*/_jsxDEV(MDBModal, {\n        isOpen: modal14,\n        toggle: () => {\n          setModal14(!modal14);\n        },\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n          toggle: () => {\n            setModal14(!modal14);\n          },\n          children: \"\\u05E2\\u05D3\\u05DB\\u05D5\\u05DF \\u05E4\\u05E8\\u05D8\\u05D9\\u05DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n          children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: /*#__PURE__*/_jsxDEV(MDBRow, {\n              children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grey-text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your Company Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      id: \"NameCompany\",\n                      value: c2.NameCompany,\n                      onChange: e => up(e),\n                      icon: \"user\",\n                      group: true,\n                      type: \"text\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your Private email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      id: \"PrivateEmail\",\n                      value: c2.PrivateEmail,\n                      onChange: e => up(e),\n                      icon: \"envelope\",\n                      group: true,\n                      type: \"email\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your Customer service email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 26\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      id: \"CustomerServiceEmail\",\n                      value: c2.CustomerServiceEmail,\n                      onChange: e => up(e),\n                      icon: \"envelope\",\n                      group: true,\n                      type: \"email\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your Customer service email password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      id: \"CustomerServiceEmailPassword\",\n                      value: c2.CustomerServiceEmailPassword,\n                      onChange: e => up(e),\n                      icon: \"lock\",\n                      group: true,\n                      type: \"password\",\n                      validate: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your User name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      id: \"UserName\",\n                      value: c2.UserName,\n                      onChange: e => up(e),\n                      icon: \"user\",\n                      group: true,\n                      type: \"text\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your User password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      id: \"UserPassword\",\n                      value: c2.UserPassword,\n                      onChange: e => up(e),\n                      icon: \"lock\",\n                      group: true,\n                      type: \"password\",\n                      validate: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            color: \"secondary\",\n            onClick: () => updateCompany(),\n            children: \"\\u05E2\\u05D3\\u05DB\\u05DF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CompanyUpdate, \"hsOqJ+VBHwup8MqsOzVMZo62dW0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CompanyUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyUpdate\");","map":{"version":3,"sources":["D:/Programing/ExternalProject/ProfileCustomerReact/src/Components/CompanyUpdate.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","useState","useDispatch","updateCompany","getCompanyByCode","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","useEffect","useSelector","CompanyUpdate","codeCompany","console","log","modal14","setModal14","errors","setErrors","PrivateEmail","UserName","UserPassword","company","setCompany","dispatch","c2","setC2","c1","NameCompany","document","getElementById","value","CustomerServiceEmail","CustomerServiceEmailPassword","alert","validateName","event","target","includes","validatePass","passw","match","pass","up","e"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCompany ,getCompanyByCode} from '../Redux/Companies/CompaniesThunk'\r\nimport { MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function CompanyUpdate (codeCompany){\r\n  console.log(\"code\")\r\n  console.log(codeCompany)\r\n  const [modal14, setModal14] = useState(true);\r\n  const [errors, setErrors] = useState({ PrivateEmail: \"שדה חובה\", UserName: \"שדה חובה\", UserPassword: \"שדה חובה\" });\r\n  const [company, setCompany] = useState(!codeCompany.company ? {} : codeCompany.company);\r\n  const dispatch = useDispatch();\r\n  let [c2,setC2]=useState({});\r\n  \r\n  useEffect(async () => {\r\n    debugger\r\n   let c1=await getCompanyByCode(dispatch,codeCompany); \r\n   console.log(\"c1\")\r\n   console.log(c1)\r\n   setC2(c1);\r\n  }, [])\r\n\r\n\r\n  const updateCompany = async () => {\r\n\r\n\r\n    let NameCompany = document.getElementById(\"NameCompany\").value\r\n    let PrivateEmail = document.getElementById(\"PrivateEmail\").value\r\n    let CustomerServiceEmail = document.getElementById(\"CustomerServiceEmail\").value\r\n    let CustomerServiceEmailPassword = document.getElementById(\"CustomerServiceEmailPassword\").value\r\n    let UserName = document.getElementById(\"UserName\").value\r\n    let UserPassword = document.getElementById(\"UserPassword\").value\r\n\r\n    if (PrivateEmail && UserName && UserPassword) {\r\n\r\n      const company = await updateCompany(dispatch, NameCompany, PrivateEmail, CustomerServiceEmail, CustomerServiceEmailPassword, UserName, UserPassword);\r\n      alert(\"הפרטים עודכנו בהצלחה\");\r\n      setModal14(!modal14);\r\n      return company\r\n    }\r\n    else {\r\n\r\n      alert(\"אנא מלא את כל השדות \");\r\n\r\n    }\r\n  }\r\n\r\n  //בדיקת תקינות של שם\r\n  const validateName = (event) => {\r\n\r\n    if (!event.target.value)\r\n      setErrors({ ...errors, UserName: \"שדה חובה\" });\r\n    else if (event.target.value.includes(\" \"))\r\n      setErrors({ ...errors, UserName: \"אין לשים רווח\" });\r\n    else {\r\n      setErrors({ ...errors, UserName: \"תקין!\" });\r\n    }\r\n    setCompany({ ...company, UserName: event.target.value })\r\n  }\r\n\r\n  //בדיקת תקינות של סיסמא\r\n  const validatePass = (event) => {\r\n\r\n    var passw = /^[A-Za-z]\\w{7,14}$/;\r\n    if (event.target.value.match(passw)) {\r\n      setErrors({ ...errors, pass: \"תקין!\" });\r\n    }\r\n    else {\r\n      setErrors({ ...errors, pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter' })\r\n    }\r\n    setCompany({ ...company, UserPassword: event.target.value })\r\n  }\r\n\r\n  const up=(e)=>{\r\n    setC2(e.target.value)\r\n}\r\n  return (\r\n    <>\r\n      \r\n      <MDBContainer>\r\n        <MDBModal isOpen={modal14} toggle={() => { setModal14(!modal14) }} centered>\r\n          <MDBModalHeader toggle={() => { setModal14(!modal14); }}>עדכון פרטים</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                  <form>\r\n\r\n                    <div className=\"grey-text\">\r\n                      <label>Your Company Name</label>\r\n                      <MDBInput  id=\"NameCompany\" value={c2.NameCompany} onChange={(e)=>up(e)} icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n                        <label>Your Private email</label>\r\n                      <MDBInput  id=\"PrivateEmail\" value={c2.PrivateEmail} onChange={(e)=>up(e)}  icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n                         <label>Your Customer service email</label>\r\n                      <MDBInput id=\"CustomerServiceEmail\" value={c2.CustomerServiceEmail} onChange={(e)=>up(e)} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n                        <label>Your Customer service email password</label>\r\n                      <MDBInput id=\"CustomerServiceEmailPassword\" value={c2.CustomerServiceEmailPassword} onChange={(e)=>up(e)} icon=\"lock\" group type=\"password\" validate />\r\n                      <label>Your User name</label>\r\n                      <MDBInput  id=\"UserName\" value={c2.UserName} onChange={(e)=>up(e)} icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n                      <label>Your User password</label>\r\n                      <MDBInput  id=\"UserPassword\" value={c2.UserPassword} onChange={(e)=>up(e)} icon=\"lock\" group type=\"password\" validate />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                    </div>\r\n                  </form>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={() => updateCompany()}>עדכן</MDBBtn>\r\n\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}