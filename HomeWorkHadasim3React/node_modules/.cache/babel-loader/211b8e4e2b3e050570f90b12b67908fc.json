{"ast":null,"code":"// import React from 'react';\n// import { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {MDBIcon, MDBTable, MDBTableHead, MDBTableBody, MDBBtn } from 'mdb-react-ui-kit';\n// import { Link } from \"react-router-dom\";\n// import {getAllCustomersByCompany} from '../Redux/Customers/CustomersThunk'\n// import {calculationProfile} from '../Redux/ProfileCalculations/ProfileCalculationsThunk'\n// import { MDBInput, MDBCard,MDBCardBody } from 'mdbreact';\n// import {\n//   BrowserRouter,\n//   withRouter\n// } from \"react-router-dom\"; \n// import { useHistory } from 'react-router';\n// import './myStyle.css'\n// import { NavLink } from 'react-router-dom';\n// import { MDBSpinner } from 'mdb-react-ui-kit';\n//  export default function CalculationCustomers(Props){\n//   const [show,setShow]=useState(false);\n//   let Company = useSelector((store) => {return store.Companies.company }); \n//   let CodeCalculation = useSelector((store) => {return store.ProfileCalculations.profileCalculation})\n//   console.log(CodeCalculation)\n//   const dispatch = useDispatch();\n//   const [customers, setCustomers] = useState(useSelector((state) => { return state.customers }))\n//   const [profileCalculation,setProfileCalculation]=useState(!Props.profileCalculation?{}:Props.profileCalculation)\n//   const [theClassificaion,settheClassificaion]=useState(useSelector((state) => { return state.theClassificaion }))\n//    const [G,setG]=useState();\n//   useEffect(async () => {\n//     var date = new Date();\n//     var dateNow = \"\"+date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear()\n//     setG(dateNow)\n//     let C = await getAllCustomersByCompany(dispatch,Company.codeCompany);\n//     if (C) {\n//         setCustomers(C)\n//     }\n//   }, [])\n// const sendToClassification = async () => {\n//     debugger\n//     var date = new Date();\n//      var dateNow = \"\"+date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear()\n//      let DateStart = document.getElementById(\"DateStart\").value\n//      let DateFinish = document.getElementById(\"DateFinish\").value\n//     var d1= new Date(DateStart);\n//     var d2= new Date(DateFinish);\n//      if(d2.getFullYear()<d1.getFullYear() || d2.getFullYear()>date.getFullYear() || d1.getFullYear()>date.getFullYear() )\n//       alert(\"בדוק ששדה השנה תקין\")\n//     else{\n//       if(d2.getFullYear()===d1.getFullYear() )\n//       {\n//         if(d2.getMonth()<d1.getMonth()|| d2.getMonth()>date.getMonth() || d1.getMonth()>date.getMonth() )\n//         alert(\"בדוק ששדה החודש תקין  \")\n//         else{\n//           if(d2.getMonth()===d1.getMonth())\n//           {\n//             if(d2.getDate()<d1.getDate()||d2.getDate()>date.getDate() || d1.getDate()>date.getDate())\n//             alert(\"  בדוק ששדה היום תקין\")\n//             else{  if(Company){\n//               setShow(true);\n//             const TheClassificaion = await calculationProfile(dispatch,Company.codeCompany,dateNow,DateStart,DateFinish);\n//             if(TheClassificaion){\n//               setShow(false);\n//              settheClassificaion(TheClassificaion)\n//             return TheClassificaion\n//             }}\n//             else{\n//               alert(\"אנא הרשם או התחבר תחילה\")\n//             }}\n//           }\n//           else{  if(Company){\n//             setShow(true);\n//             debugger;\n//           const TheClassificaion = await calculationProfile(dispatch,Company.codeCompany,dateNow,DateStart,DateFinish);\n//           if(TheClassificaion){\n//             setShow(false);\n//            settheClassificaion(TheClassificaion)\n//           return TheClassificaion\n//           }}\n//           else{\n//             alert(\"אנא הרשם או התחבר תחילה\")\n//           }}\n//         }\n//       }\n//      else{\n//       if(Company){\n//       const TheClassificaion = await calculationProfile(dispatch,Company.codeCompany,dateNow,DateStart,DateFinish);\n//       if(TheClassificaion){\n//        setShow(false);\n//        settheClassificaion(TheClassificaion)\n//       return TheClassificaion\n//       }}\n//       else{\n//         alert(\"אנא הרשם או התחבר תחילה\")\n//       }\n//     }\n//     }\n//   }\n//   const up=(e)=>{\n//     setProfileCalculation(e.target.value)\n//   }\n//  return <>\n//  {show===false ?\n//     <BrowserRouter className=\"table\">\n//     <lable className='bDate'><h5>תאריך סיווג נוכחי  </h5></lable>\n//     <p className='pdate'>{G}</p>\n//      { theClassificaion === undefined ?\n//      <div className='bDate'>\n// <table>\n//   <tr>\n//     <td><label className='bDate'><h5>בחר תאריך התחלה</h5></label></td>\n//     <td><lable  className='bDate'><h5>בחר תאריך סיום</h5></lable></td>\n//     </tr>\n//     <tr>\n//     <td> <MDBInput  type=\"date\" id=\"DateStart\" value={profileCalculation.fromDate} onChange={(e) => { up(e) }} style={{width:\"150px\"}}></MDBInput></td>\n//     <td> <MDBInput  type=\"date\" id=\"DateFinish\" value={profileCalculation.toDate} onChange={(e) => { up(e) }} style={{width:\"150px\"}}></MDBInput></td>\n//     </tr>\n//     </table>    \n//     <MDBBtn onClick={()=>{sendToClassification()}}>סווג</MDBBtn>\n//     </div>\n//     :\n//     <p></p>\n//     }\n//     <p></p>\n//     <br></br>\n//     <div className=\"square justify-content-center\">\n//     {theClassificaion === undefined?<></> :\n//     <MDBCard style={{opacity:\"0.8\"}}><MDBCardBody><MDBTable striped>\n//         <MDBTableHead>\n//           <tr >\n//             <th  scope='col'>#</th>\n//             <th scope='col'>שם:</th>\n//             <th scope='col'>אימייל:</th>\n//             <th scope='col'>פרופיל אחרון:</th>\n//           </tr>\n//         </MDBTableHead>\n//         <MDBTableBody>\n//           {theClassificaion === undefined ? <h3>wait...</h3> :\n//             theClassificaion.map((f, i) =>\n//               <tr >\n//                 <th scope='row'>{++i}</th>\n//                 <td >{f.nameCustomer}</td>\n//                 <td>{f.emailCustomer}</td>\n//                 <td>{f.statusCustomer}</td>\n//                 <td>\n//                   <div class=\"d-grid gap-2 d-md-flex justify-content-md\">\n//                 </div>\n//                 </td>\n//               </tr>\n//             )}\n//         </MDBTableBody>\n//       </MDBTable></MDBCardBody></MDBCard>\n//       }\n//     </div>\n//     </BrowserRouter>:\n//       <>\n//       <h2>לקוחותיך עוברים סיווג כעת</h2>\n//       <h2>הדבר עשוי להמשך כמה דקות אנא המתן...</h2>\n//       <div className='text-center'>\n//       <MDBSpinner className='rol' role='status' size='350px'> \n//       </MDBSpinner> \n// </div>\n// <br/>\n// </>\n// }\n// </>\n// }","map":{"version":3,"sources":["D:/Programing/HadasimProject/HomeWorkHadasim3React/src/Components/CalculationCustomers.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\r\n// import { useEffect, useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import {MDBIcon, MDBTable, MDBTableHead, MDBTableBody, MDBBtn } from 'mdb-react-ui-kit';\r\n// import { Link } from \"react-router-dom\";\r\n// import {getAllCustomersByCompany} from '../Redux/Customers/CustomersThunk'\r\n// import {calculationProfile} from '../Redux/ProfileCalculations/ProfileCalculationsThunk'\r\n// import { MDBInput, MDBCard,MDBCardBody } from 'mdbreact';\r\n// import {\r\n//   BrowserRouter,\r\n//   withRouter\r\n// } from \"react-router-dom\"; \r\n// import { useHistory } from 'react-router';\r\n// import './myStyle.css'\r\n// import { NavLink } from 'react-router-dom';\r\n// import { MDBSpinner } from 'mdb-react-ui-kit';\r\n\r\n//  export default function CalculationCustomers(Props){\r\n//   const [show,setShow]=useState(false);\r\n//   let Company = useSelector((store) => {return store.Companies.company }); \r\n//   let CodeCalculation = useSelector((store) => {return store.ProfileCalculations.profileCalculation})\r\n//   console.log(CodeCalculation)\r\n//   const dispatch = useDispatch();\r\n//   const [customers, setCustomers] = useState(useSelector((state) => { return state.customers }))\r\n//   const [profileCalculation,setProfileCalculation]=useState(!Props.profileCalculation?{}:Props.profileCalculation)\r\n//   const [theClassificaion,settheClassificaion]=useState(useSelector((state) => { return state.theClassificaion }))\r\n//    const [G,setG]=useState();\r\n//   useEffect(async () => {\r\n\r\n//     var date = new Date();\r\n//     var dateNow = \"\"+date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear()\r\n//     setG(dateNow)\r\n//     let C = await getAllCustomersByCompany(dispatch,Company.codeCompany);\r\n//     if (C) {\r\n//         setCustomers(C)\r\n//     }\r\n//   }, [])\r\n\r\n\r\n\r\n// const sendToClassification = async () => {\r\n//     debugger\r\n//     var date = new Date();\r\n//      var dateNow = \"\"+date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear()\r\n//      let DateStart = document.getElementById(\"DateStart\").value\r\n//      let DateFinish = document.getElementById(\"DateFinish\").value\r\n//     var d1= new Date(DateStart);\r\n//     var d2= new Date(DateFinish);\r\n//      if(d2.getFullYear()<d1.getFullYear() || d2.getFullYear()>date.getFullYear() || d1.getFullYear()>date.getFullYear() )\r\n//       alert(\"בדוק ששדה השנה תקין\")\r\n//     else{\r\n     \r\n//       if(d2.getFullYear()===d1.getFullYear() )\r\n//       {\r\n//         if(d2.getMonth()<d1.getMonth()|| d2.getMonth()>date.getMonth() || d1.getMonth()>date.getMonth() )\r\n//         alert(\"בדוק ששדה החודש תקין  \")\r\n//         else{\r\n//           if(d2.getMonth()===d1.getMonth())\r\n//           {\r\n\r\n//             if(d2.getDate()<d1.getDate()||d2.getDate()>date.getDate() || d1.getDate()>date.getDate())\r\n//             alert(\"  בדוק ששדה היום תקין\")\r\n//             else{  if(Company){\r\n             \r\n//               setShow(true);\r\n//             const TheClassificaion = await calculationProfile(dispatch,Company.codeCompany,dateNow,DateStart,DateFinish);\r\n            \r\n//             if(TheClassificaion){\r\n//               setShow(false);\r\n//              settheClassificaion(TheClassificaion)\r\n\r\n//             return TheClassificaion\r\n          \r\n           \r\n//             }}\r\n//             else{\r\n//               alert(\"אנא הרשם או התחבר תחילה\")\r\n//             }}\r\n//           }\r\n//           else{  if(Company){\r\n//             setShow(true);\r\n//             debugger;\r\n//           const TheClassificaion = await calculationProfile(dispatch,Company.codeCompany,dateNow,DateStart,DateFinish);\r\n//           if(TheClassificaion){\r\n//             setShow(false);\r\n//            settheClassificaion(TheClassificaion)\r\n//           return TheClassificaion\r\n//           }}\r\n//           else{\r\n//             alert(\"אנא הרשם או התחבר תחילה\")\r\n//           }}\r\n//         }\r\n//       }\r\n//      else{\r\n//       if(Company){\r\n//       const TheClassificaion = await calculationProfile(dispatch,Company.codeCompany,dateNow,DateStart,DateFinish);\r\n//       if(TheClassificaion){\r\n//        setShow(false);\r\n//        settheClassificaion(TheClassificaion)\r\n//       return TheClassificaion\r\n//       }}\r\n//       else{\r\n//         alert(\"אנא הרשם או התחבר תחילה\")\r\n//       }\r\n//     }\r\n//     }\r\n//   }\r\n//   const up=(e)=>{\r\n//     setProfileCalculation(e.target.value)\r\n//   }\r\n//  return <>\r\n//  {show===false ?\r\n//     <BrowserRouter className=\"table\">\r\n//     <lable className='bDate'><h5>תאריך סיווג נוכחי  </h5></lable>\r\n//     <p className='pdate'>{G}</p>\r\n//      { theClassificaion === undefined ?\r\n//      <div className='bDate'>\r\n// <table>\r\n//   <tr>\r\n//     <td><label className='bDate'><h5>בחר תאריך התחלה</h5></label></td>\r\n//     <td><lable  className='bDate'><h5>בחר תאריך סיום</h5></lable></td>\r\n//     </tr>\r\n//     <tr>\r\n//     <td> <MDBInput  type=\"date\" id=\"DateStart\" value={profileCalculation.fromDate} onChange={(e) => { up(e) }} style={{width:\"150px\"}}></MDBInput></td>\r\n//     <td> <MDBInput  type=\"date\" id=\"DateFinish\" value={profileCalculation.toDate} onChange={(e) => { up(e) }} style={{width:\"150px\"}}></MDBInput></td>\r\n//     </tr>\r\n//     </table>    \r\n//     <MDBBtn onClick={()=>{sendToClassification()}}>סווג</MDBBtn>\r\n//     </div>\r\n//     :\r\n//     <p></p>\r\n//     }\r\n//     <p></p>\r\n//     <br></br>\r\n//     <div className=\"square justify-content-center\">\r\n//     {theClassificaion === undefined?<></> :\r\n//     <MDBCard style={{opacity:\"0.8\"}}><MDBCardBody><MDBTable striped>\r\n//         <MDBTableHead>\r\n//           <tr >\r\n//             <th  scope='col'>#</th>\r\n//             <th scope='col'>שם:</th>\r\n//             <th scope='col'>אימייל:</th>\r\n//             <th scope='col'>פרופיל אחרון:</th>\r\n//           </tr>\r\n//         </MDBTableHead>\r\n//         <MDBTableBody>\r\n//           {theClassificaion === undefined ? <h3>wait...</h3> :\r\n//             theClassificaion.map((f, i) =>\r\n//               <tr >\r\n//                 <th scope='row'>{++i}</th>\r\n//                 <td >{f.nameCustomer}</td>\r\n//                 <td>{f.emailCustomer}</td>\r\n//                 <td>{f.statusCustomer}</td>\r\n//                 <td>\r\n//                   <div class=\"d-grid gap-2 d-md-flex justify-content-md\">\r\n//                 </div>\r\n//                 </td>\r\n//               </tr>\r\n//             )}\r\n//         </MDBTableBody>\r\n//       </MDBTable></MDBCardBody></MDBCard>\r\n//       }\r\n//     </div>\r\n//     </BrowserRouter>:\r\n//       <>\r\n//       <h2>לקוחותיך עוברים סיווג כעת</h2>\r\n//       <h2>הדבר עשוי להמשך כמה דקות אנא המתן...</h2>\r\n//       <div className='text-center'>\r\n//       <MDBSpinner className='rol' role='status' size='350px'> \r\n//       </MDBSpinner> \r\n// </div>\r\n// <br/>\r\n// </>\r\n// }\r\n// </>\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}