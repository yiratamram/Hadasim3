{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { addCustomer } from '../Redux/Customer/CustomersThunk'; //import {store} from '../Redax/Reducers';\n\nimport { Params } from \"react-router\";\nimport { render } from \"react-dom\";\nimport { MDBAlert } from 'mdbreact';\n\nconst FormPage = Props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState({\n    id: \"שדה חובה\",\n    pass: \"שדה חובה\"\n  });\n  const [customer, setCustomer] = useState(!Props.customer ? {} : Props.customer);\n\n  const newCustomer = async () => {\n    if (customer.CustomerName && customer.CustomerPassword) {\n      await addCustomer(dispatch, customer.CustomerName, customer.CustomerId, customer.CustomerPassword, customer.CustomerCreditcard);\n      console.log(a);\n      alert(\"wellcome\"); //globalThis.location.href='http://localhost:3000/products';\n    } else {\n      //  איך אני משנה ניתוב לקומפוננטת אלרט בלי לחיצה??????????\n      alert(\"תעודת זהות וסיסמא הינם שדות חובה על מנת להירשם\");\n    } //בדיקת תקינות של שם\n\n\n    const validateName = event => {\n      if (!event.target.value) setErrors({ ...errors,\n        CustomerName: \"שדה חובה\"\n      });else if (event.target.value.includes(\" \")) setErrors({ ...errors,\n        CustomerName: \"אין לשים רווח\"\n      });else {\n        setErrors({ ...errors,\n          CustomerName: \"תקין!\"\n        });\n      }\n      setCustomer({ ...customer,\n        CustomerName: event.target.value\n      });\n    }; //בדיקת תקינות של סיסמא\n\n\n    const validatePass = event => {\n      var passw = /^[A-Za-z]\\w{7,14}$/;\n\n      if (event.target.value.match(passw)) {\n        setErrors({ ...errors,\n          pass: \"תקין!\"\n        });\n      } else {\n        setErrors({ ...errors,\n          pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter'\n        });\n      }\n\n      setCustomer({ ...customer,\n        CustomerPassword: event.target.value\n      });\n    };\n\n    render();\n    {\n      return {\n        /* <MDBContainer>\r\n         <MDBRow>\r\n           <MDBCol md=\"6\">\r\n             <form>\r\n               <p className=\"h4 text-center mb-4\">Sign up</p>\r\n               <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\">\r\n                 Your name\r\n               </label>\r\n               <input type=\"text\" id=\"defaultFormRegisterNameEx\" value={customer.CustomerName} onChange={(e)=>{validateName(e)}} className=\"form-control\" />\r\n               <p > {errors.CustomerName}</p>\r\n               <br />\r\n               <label htmlFor=\"defaultFormRegisteridEx\" className=\"grey-text\">\r\n                 Your id\r\n               </label>\r\n               <input type=\"text\" id=\"defaultFormRegisteridEx\" value={customer.CustomerId} className=\"form-control\" />\r\n               <br />\r\n               <label htmlFor=\"defaultFormRegistercreaditCardEx\" className=\"grey-text\">\r\n                 Your creaditCard\r\n               </label>\r\n               <input type=\"text\" id=\"defaultFormRegistercreaditCardEx\" value={customer.CustomerCreditcard} className=\"form-control\" />\r\n               <p > {errors.CustomerPassword}</p>\r\n               <br />\r\n               <label htmlFor=\"defaultFormRegisterPasswordEx\" className=\"grey-text\">\r\n                 Your password\r\n               </label>\r\n               <input type=\"password\" id=\"defaultFormRegisterPasswordEx\" value={customer.CustomerPassword} onChange={(e)=>{validatePass(e)}} className=\"form-control\" />\r\n               <div className=\"text-center mt-4\">\r\n                 <MDBBtn color=\"deep-orange\" className=\"mb-3\" type=\"submit\" onClick={() => newCustomer()}>\r\n                 Register\r\n                       </MDBBtn>\r\n               </div>\r\n             </form>\r\n           </MDBCol>\r\n         </MDBRow>\r\n        </MDBContainer> */\n      };\n    }\n    ;\n  };\n};\n\n_s(FormPage, \"8CMwsL+s+s6lHoMbZnAM3gWWKak=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormPage;\nexport default FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/לימודים שנה ב/react/פרוייקט חנוכה/MDB 2 React/src/Comp/SignUp.jsx"],"names":["React","useState","useDispatch","MDBContainer","MDBRow","MDBCol","MDBBtn","addCustomer","Params","render","MDBAlert","FormPage","Props","dispatch","errors","setErrors","id","pass","customer","setCustomer","newCustomer","CustomerName","CustomerPassword","CustomerId","CustomerCreditcard","console","log","a","alert","validateName","event","target","value","includes","validatePass","passw","match"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAqD,UAArD;AACA,SAAQC,WAAR,QAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,UAAzB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACE,QAAM,CAACY,MAAD,EAASC,SAAT,IAAoBd,QAAQ,CAAC;AAACe,IAAAA,EAAE,EAAC,UAAJ;AAAgBC,IAAAA,IAAI,EAAC;AAArB,GAAD,CAAlC;AACC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAAwBlB,QAAQ,CAAC,CAACW,KAAK,CAACM,QAAP,GAAgB,EAAhB,GAAmBN,KAAK,CAACM,QAA1B,CAAtC;;AAEA,QAAME,WAAW,GAAC,YAAS;AAC1B,QAAGF,QAAQ,CAACG,YAAT,IAAuBH,QAAQ,CAACI,gBAAnC,EACA;AAAC,YAAMf,WAAW,CAACM,QAAD,EAAWK,QAAQ,CAACG,YAApB,EAAiCH,QAAQ,CAACK,UAA1C,EAAsDL,QAAQ,CAACI,gBAA/D,EAAiFJ,QAAQ,CAACM,kBAA1F,CAAjB;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACDC,MAAAA,KAAK,CAAC,UAAD,CAAL,CAFD,CAGC;AACA,KALD,MAOA;AACD;AACEA,MAAAA,KAAK,CAAC,gDAAD,CAAL;AAED,KAZ0B,CAgBhC;;;AACI,UAAMC,YAAY,GAAEC,KAAD,IAAS;AAExB,UAAG,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAjB,EACAjB,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYO,QAAAA,YAAY,EAAC;AAAzB,OAAD,CAAT,CADA,KAEK,IAAIS,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,QAAnB,CAA4B,GAA5B,CAAJ,EACLlB,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYO,QAAAA,YAAY,EAAC;AAAzB,OAAD,CAAT,CADK,KAEJ;AACDN,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYO,UAAAA,YAAY,EAAC;AAAzB,SAAD,CAAT;AACH;AACDF,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcG,QAAAA,YAAY,EAAES,KAAK,CAACC,MAAN,CAAaC;AAAzC,OAAD,CAAX;AACC,KAVD,CAjB4B,CA6BhC;;;AACI,UAAME,YAAY,GAAEJ,KAAD,IACvB;AAEA,UAAIK,KAAK,GAAG,oBAAZ;;AACA,UAAIL,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBI,KAAnB,CAAyBD,KAAzB,CAAJ,EAAqC;AACnCpB,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYG,UAAAA,IAAI,EAAE;AAAlB,SAAD,CAAT;AACD,OAFD,MAGK;AACHF,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYG,UAAAA,IAAI,EAAE;AAAlB,SAAD,CAAT;AACD;;AACDE,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcI,QAAAA,gBAAgB,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAA7C,OAAD,CAAX;AAEC,KAZG;;AAaJvB,IAAAA,MAAM;AAAG;AACT,aACA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA,OADA;AAsCC;AAAA;AACA,GAnFI;AAoFJ,CAzFD;;GAAME,Q;UACaT,W;;;KADbS,Q;AA0FN,eAAeA,QAAf","sourcesContent":["\r\nimport React from \"react\";\r\nimport  {useState} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport {addCustomer} from '../Redux/Customer/CustomersThunk'\r\n//import {store} from '../Redax/Reducers';\r\nimport { Params } from \"react-router\";\r\nimport { render } from \"react-dom\";\r\nimport { MDBAlert } from 'mdbreact';\r\n\r\nconst FormPage = (Props) => {\r\n  const dispatch = useDispatch();\r\n    const [errors, setErrors]=useState({id:\"שדה חובה\", pass:\"שדה חובה\"});\r\n     const [customer, setCustomer]=useState(!Props.customer?{}:Props.customer);\r\n    \r\n     const newCustomer=async()=>{\r\n      if(customer.CustomerName&&customer.CustomerPassword)\r\n      {await addCustomer(dispatch, customer.CustomerName,customer.CustomerId ,customer.CustomerPassword, customer.CustomerCreditcard);\r\n        console.log(a);\r\n       alert(\"wellcome\");\r\n       //globalThis.location.href='http://localhost:3000/products';\r\n      }\r\n      else\r\n      {\r\n     //  איך אני משנה ניתוב לקומפוננטת אלרט בלי לחיצה??????????\r\n       alert(\"תעודת זהות וסיסמא הינם שדות חובה על מנת להירשם\");\r\n       \r\n     }\r\n   \r\n  \r\n     \r\n//בדיקת תקינות של שם\r\n    const validateName=(event)=>{\r\n\r\n        if(!event.target.value)\r\n        setErrors({...errors, CustomerName:\"שדה חובה\"});\r\n        else if (event.target.value.includes(\" \"))\r\n        setErrors({...errors, CustomerName:\"אין לשים רווח\"});\r\n    else {\r\n        setErrors({...errors, CustomerName:\"תקין!\"});\r\n    }\r\n    setCustomer({...customer, CustomerName: event.target.value })\r\n    }\r\n\r\n//בדיקת תקינות של סיסמא\r\n    const validatePass=(event)=>\r\n{\r\n    \r\nvar passw = /^[A-Za-z]\\w{7,14}$/;\r\nif (event.target.value.match(passw)) {\r\n  setErrors({...errors, pass: \"תקין!\"} );\r\n}\r\nelse {\r\n  setErrors({...errors, pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter' })\r\n}\r\nsetCustomer({...customer, CustomerPassword: event.target.value })\r\n\r\n}\r\nrender();{\r\nreturn (\r\n{/* <MDBContainer>\r\n  <MDBRow>\r\n    <MDBCol md=\"6\">\r\n      <form>\r\n        <p className=\"h4 text-center mb-4\">Sign up</p>\r\n        <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\">\r\n          Your name\r\n        </label>\r\n        <input type=\"text\" id=\"defaultFormRegisterNameEx\" value={customer.CustomerName} onChange={(e)=>{validateName(e)}} className=\"form-control\" />\r\n        <p > {errors.CustomerName}</p>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisteridEx\" className=\"grey-text\">\r\n          Your id\r\n        </label>\r\n        <input type=\"text\" id=\"defaultFormRegisteridEx\" value={customer.CustomerId} className=\"form-control\" />\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegistercreaditCardEx\" className=\"grey-text\">\r\n          Your creaditCard\r\n        </label>\r\n        <input type=\"text\" id=\"defaultFormRegistercreaditCardEx\" value={customer.CustomerCreditcard} className=\"form-control\" />\r\n        <p > {errors.CustomerPassword}</p>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisterPasswordEx\" className=\"grey-text\">\r\n          Your password\r\n        </label>\r\n        <input type=\"password\" id=\"defaultFormRegisterPasswordEx\" value={customer.CustomerPassword} onChange={(e)=>{validatePass(e)}} className=\"form-control\" />\r\n        <div className=\"text-center mt-4\">\r\n          <MDBBtn color=\"deep-orange\" className=\"mb-3\" type=\"submit\" onClick={() => newCustomer()}>\r\n          Register\r\n                </MDBBtn>\r\n        </div>\r\n      </form>\r\n    </MDBCol>\r\n  </MDBRow>\r\n</MDBContainer> */}\r\n\r\n);\r\n};\r\n};\r\n};\r\nexport default FormPage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}