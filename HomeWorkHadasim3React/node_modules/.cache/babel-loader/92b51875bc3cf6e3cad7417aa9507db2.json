{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05D9\\u05E8\\u05D0\\u05EA \\u05E2\\u05DE\\u05E8\\u05DD\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D7\\u05D9\\u05E6\\u05D5\\u05E0\\u05D9\\\\ProfileCustomerReact\\\\src\\\\Components\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { addCompany } from '../Redux/Companies/CompaniesThunk';\nimport { MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp(Props) {\n  _s();\n\n  const [modal14, setModal14] = useState(true);\n  const [errors, setErrors] = useState({\n    PrivateEmail: \"שדה חובה\",\n    UserName: \"שדה חובה\",\n    UserPassword: \"שדה חובה\"\n  });\n  const [company, setCompany] = useState(!Props.company ? {} : Props.company);\n  const dispatch = useDispatch();\n\n  const newCompany = async () => {\n    let NameCompany = document.getElementById(\"NameCompany\").value;\n    let PrivateEmail = document.getElementById(\"PrivateEmail\").value;\n    let CustomerServiceEmail = document.getElementById(\"CustomerServiceEmail\").value;\n    let CustomerServiceEmailPassword = document.getElementById(\"CustomerServiceEmailPassword\").value;\n    let UserName = document.getElementById(\"UserName\").value;\n    let UserPassword = document.getElementById(\"UserPassword\").value;\n\n    if (PrivateEmail && UserName && UserPassword) {\n      const company = await addCompany(dispatch, NameCompany, PrivateEmail, CustomerServiceEmail, CustomerServiceEmailPassword, UserName, UserPassword);\n      alert(\"ברוך הבא \" + UserName + \" לאתרינו מקווים שתהיה לך את חווית הגלישה הטובה\");\n      setModal14(!modal14);\n      return company;\n    } else {\n      alert(\"אנא מלא את כל השדות \");\n    }\n  }; //בדיקת תקינות של שם\n\n\n  const validateName = event => {\n    if (!event.target.value) setErrors({ ...errors,\n      UserName: \"שדה חובה\"\n    });else if (event.target.value.includes(\" \")) setErrors({ ...errors,\n      UserName: \"אין לשים רווח\"\n    });else {\n      setErrors({ ...errors,\n        UserName: \"תקין!\"\n      });\n    }\n    setCompany({ ...company,\n      UserName: event.target.value\n    });\n  }; //בדיקת תקינות של סיסמא\n\n\n  const validatePass = event => {\n    var passw = /^[A-Za-z]\\w{7,14}$/;\n\n    if (event.target.value.match(passw)) {\n      setErrors({ ...errors,\n        pass: \"תקין!\"\n      });\n    } else {\n      setErrors({ ...errors,\n        pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter'\n      });\n    }\n\n    setCompany({ ...company,\n      UserPassword: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: /*#__PURE__*/_jsxDEV(MDBModal, {\n        isOpen: modal14,\n        toggle: () => {\n          setModal14(!modal14);\n        },\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n          toggle: () => {\n            setModal14(!modal14);\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n          children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: /*#__PURE__*/_jsxDEV(MDBRow, {\n              children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grey-text\",\n                    children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                      label: \"Your Company Name\",\n                      id: \"NameCompany\",\n                      value: company.NameCompany,\n                      onChange: e => {\n                        validateName(e);\n                      },\n                      icon: \"user\",\n                      group: true,\n                      type: \"text\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      label: \"Your Private email\",\n                      id: \"PrivateEmail\",\n                      value: company.PrivateEmail,\n                      icon: \"envelope\",\n                      group: true,\n                      type: \"email\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      label: \"Your Customer service email\",\n                      id: \"CustomerServiceEmail\",\n                      value: company.CustomerServiceEmail,\n                      icon: \"envelope\",\n                      group: true,\n                      type: \"email\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      label: \"Your Customer service email password\",\n                      id: \"CustomerServiceEmailPassword\",\n                      value: company.CustomerServiceEmailPassword,\n                      onChange: e => {\n                        validatePass(e);\n                      },\n                      icon: \"lock\",\n                      group: true,\n                      type: \"password\",\n                      validate: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      label: \"Your User name\",\n                      id: \"UserName\",\n                      value: company.UserName,\n                      icon: \"user\",\n                      group: true,\n                      type: \"text\",\n                      validate: true,\n                      error: \"wrong\",\n                      success: \"right\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      label: \"Your User password\",\n                      id: \"UserPassword\",\n                      value: company.UserPassword,\n                      onChange: e => {\n                        validatePass(e);\n                      },\n                      icon: \"lock\",\n                      group: true,\n                      type: \"password\",\n                      validate: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            color: \"secondary\",\n            onClick: () => newCompany(),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // export default function SignIn(){\n//   const [modal14,setModal14]=useState(true);\n//   const history=useHistory();\n//   const dispatch=useDispatch();\n//   const ModalPage = async() => {  \n//     const PrivateEmail = document.getElementById(\"PrivateEmail\").value;\n//     const UserName = document.getElementById(\"UserName\").value;\n//     const Password = document.getElementById(\"Password\").value;\n//     const company =  await  getCompanyByNameAndPassword(dispatch,PrivateEmail,UserName, Password);\n//   if (company) \n//   {\n//     alert(\"ברוך הבא \"+UserName);\n//      setModal14(!modal14);\n//   return company;\n//   }\n//   else\n//    {\n//      alert(\"אחד או יותר מהנתונים שגוי...\");\n//     return;\n//   }\n//   }\n//   return (\n//     <BrowserRouter>\n//       <MDBContainer>\n//         <MDBModal isOpen={modal14} toggle={()=>{setModal14(!modal14)}} centered>\n//           <MDBModalHeader toggle={()=>{setModal14(!modal14);}}>Sign In</MDBModalHeader>\n//           <MDBModalBody>\n//           <MDBContainer>\n//   <MDBRow>\n//     <MDBCol md=\"6\">\n//       <form>\n//         <div className=\"grey-text\">\n//         <MDBInput label=\"Email\" id=\"PrivateEmail\" icon=\"envelope\" group type=\"text\" validate error=\"wrong\"\n//             success=\"right\" />\n//           <MDBInput label=\"User name\" id=\"UserName\" icon=\"user\" group type=\"text\" validate error=\"wrong\"\n//             success=\"right\" />\n//           <MDBInput label=\"Password\" id=\"Password\" icon=\"lock\" group type=\"password\" validate />\n//         </div>\n//         <div className=\"text-center\">\n//         </div>\n//       </form>\n//     </MDBCol>\n//   </MDBRow>\n// </MDBContainer>\n//           </MDBModalBody>\n//           <MDBModalFooter>\n//             <MDBBtn color=\"secondary\" onClick={()=>ModalPage(dispatch)}>SignIn</MDBBtn>\n//            <NavLink to={`/SignUp`}> SignUp</NavLink>\n//             {/* <MDBBtn onClick={()=>{setModal14(!modal14);history.push(\"/SignUp\")}}>SignUp </MDBBtn> */}\n//             {/* <MDBBtn color=\"primary\">SignUp</MDBBtn> */}\n//           </MDBModalFooter>\n//         </MDBModal>\n//       </MDBContainer>\n//       </BrowserRouter>\n//     );\n//   }\n\n_s(SignUp, \"TvgJdUVxi1jJkNuyQ3JU+xkFSMo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/פרוייקט חיצוני/ProfileCustomerReact/src/Components/SignUp.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","useState","useDispatch","addCompany","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","SignUp","Props","modal14","setModal14","errors","setErrors","PrivateEmail","UserName","UserPassword","company","setCompany","dispatch","newCompany","NameCompany","document","getElementById","value","CustomerServiceEmail","CustomerServiceEmailPassword","alert","validateName","event","target","includes","validatePass","passw","match","pass","e"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addCompany } from '../Redux/Companies/CompaniesThunk'\r\nimport { MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\n\r\n\r\nexport default function SignUp (Props){\r\n\r\n\r\n  const [modal14, setModal14] = useState(true);\r\n  const [errors, setErrors] = useState({ PrivateEmail: \"שדה חובה\", UserName: \"שדה חובה\", UserPassword: \"שדה חובה\" });\r\n  const [company, setCompany] = useState(!Props.company ? {} : Props.company);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const newCompany = async () => {\r\n\r\n\r\n    let NameCompany = document.getElementById(\"NameCompany\").value\r\n    let PrivateEmail = document.getElementById(\"PrivateEmail\").value\r\n    let CustomerServiceEmail = document.getElementById(\"CustomerServiceEmail\").value\r\n    let CustomerServiceEmailPassword = document.getElementById(\"CustomerServiceEmailPassword\").value\r\n    let UserName = document.getElementById(\"UserName\").value\r\n    let UserPassword = document.getElementById(\"UserPassword\").value\r\n\r\n    if (PrivateEmail && UserName && UserPassword) {\r\n\r\n      const company = await addCompany(dispatch, NameCompany, PrivateEmail, CustomerServiceEmail, CustomerServiceEmailPassword, UserName, UserPassword);\r\n      alert(\"ברוך הבא \" + UserName + \" לאתרינו מקווים שתהיה לך את חווית הגלישה הטובה\");\r\n      setModal14(!modal14);\r\n      return company\r\n    }\r\n    else {\r\n\r\n      alert(\"אנא מלא את כל השדות \");\r\n\r\n    }\r\n  }\r\n\r\n  //בדיקת תקינות של שם\r\n  const validateName = (event) => {\r\n\r\n    if (!event.target.value)\r\n      setErrors({ ...errors, UserName: \"שדה חובה\" });\r\n    else if (event.target.value.includes(\" \"))\r\n      setErrors({ ...errors, UserName: \"אין לשים רווח\" });\r\n    else {\r\n      setErrors({ ...errors, UserName: \"תקין!\" });\r\n    }\r\n    setCompany({ ...company, UserName: event.target.value })\r\n  }\r\n\r\n  //בדיקת תקינות של סיסמא\r\n  const validatePass = (event) => {\r\n\r\n    var passw = /^[A-Za-z]\\w{7,14}$/;\r\n    if (event.target.value.match(passw)) {\r\n      setErrors({ ...errors, pass: \"תקין!\" });\r\n    }\r\n    else {\r\n      setErrors({ ...errors, pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter' })\r\n    }\r\n    setCompany({ ...company, UserPassword: event.target.value })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      \r\n      <MDBContainer>\r\n        <MDBModal isOpen={modal14} toggle={() => { setModal14(!modal14) }} centered>\r\n          <MDBModalHeader toggle={() => { setModal14(!modal14); }}>Sign Up</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                  <form>\r\n\r\n                    <div className=\"grey-text\">\r\n                      <MDBInput label=\"Your Company Name\" id=\"NameCompany\" value={company.NameCompany} onChange={(e) => { validateName(e) }} icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n                      <MDBInput label=\"Your Private email\" id=\"PrivateEmail\" value={company.PrivateEmail} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n                      <MDBInput label=\"Your Customer service email\" id=\"CustomerServiceEmail\" value={company.CustomerServiceEmail} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n                      <MDBInput label=\"Your Customer service email password\" id=\"CustomerServiceEmailPassword\" value={company.CustomerServiceEmailPassword} onChange={(e) => { validatePass(e) }} icon=\"lock\" group type=\"password\" validate />\r\n\r\n                      <MDBInput label=\"Your User name\" id=\"UserName\" value={company.UserName} icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n                        success=\"right\" />\r\n\r\n                      <MDBInput label=\"Your User password\" id=\"UserPassword\" value={company.UserPassword} onChange={(e) => { validatePass(e) }} icon=\"lock\" group type=\"password\" validate />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                    </div>\r\n                  </form>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={() => newCompany()}>Register</MDBBtn>\r\n\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n \r\n\r\n// export default function SignIn(){\r\n//   const [modal14,setModal14]=useState(true);\r\n//   const history=useHistory();\r\n//   const dispatch=useDispatch();\r\n  \r\n//   const ModalPage = async() => {  \r\n//     const PrivateEmail = document.getElementById(\"PrivateEmail\").value;\r\n//     const UserName = document.getElementById(\"UserName\").value;\r\n//     const Password = document.getElementById(\"Password\").value;\r\n//     const company =  await  getCompanyByNameAndPassword(dispatch,PrivateEmail,UserName, Password);\r\n    \r\n//   if (company) \r\n//   {\r\n//     alert(\"ברוך הבא \"+UserName);\r\n//      setModal14(!modal14);\r\n//   return company;\r\n//   }\r\n//   else\r\n//    {\r\n//      alert(\"אחד או יותר מהנתונים שגוי...\");\r\n    \r\n//     return;\r\n//   }\r\n  \r\n//   }\r\n\r\n//   return (\r\n//     <BrowserRouter>\r\n//       <MDBContainer>\r\n//         <MDBModal isOpen={modal14} toggle={()=>{setModal14(!modal14)}} centered>\r\n//           <MDBModalHeader toggle={()=>{setModal14(!modal14);}}>Sign In</MDBModalHeader>\r\n//           <MDBModalBody>\r\n//           <MDBContainer>\r\n//   <MDBRow>\r\n//     <MDBCol md=\"6\">\r\n//       <form>\r\n       \r\n//         <div className=\"grey-text\">\r\n//         <MDBInput label=\"Email\" id=\"PrivateEmail\" icon=\"envelope\" group type=\"text\" validate error=\"wrong\"\r\n//             success=\"right\" />\r\n//           <MDBInput label=\"User name\" id=\"UserName\" icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n//             success=\"right\" />\r\n//           <MDBInput label=\"Password\" id=\"Password\" icon=\"lock\" group type=\"password\" validate />\r\n//         </div>\r\n//         <div className=\"text-center\">\r\n//         </div>\r\n//       </form>\r\n//     </MDBCol>\r\n//   </MDBRow>\r\n// </MDBContainer>\r\n//           </MDBModalBody>\r\n//           <MDBModalFooter>\r\n//             <MDBBtn color=\"secondary\" onClick={()=>ModalPage(dispatch)}>SignIn</MDBBtn>\r\n//            <NavLink to={`/SignUp`}> SignUp</NavLink>\r\n//             {/* <MDBBtn onClick={()=>{setModal14(!modal14);history.push(\"/SignUp\")}}>SignUp </MDBBtn> */}\r\n//             {/* <MDBBtn color=\"primary\">SignUp</MDBBtn> */}\r\n//           </MDBModalFooter>\r\n//         </MDBModal>\r\n//       </MDBContainer>\r\n//       </BrowserRouter>\r\n//     );\r\n//   }"]},"metadata":{},"sourceType":"module"}