{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05D9\\u05E8\\u05D0\\u05EA \\u05E2\\u05DE\\u05E8\\u05DD\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD \\u05E9\\u05E0\\u05D4 \\u05D1\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D7\\u05E0\\u05D5\\u05DB\\u05D4\\\\MDB 2 React\\\\src\\\\Comp\\\\showCustomers.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { getAllCustomersFromServer, getCustomerFromserverById, addCustomer } from '../Redux/Customer/CustomersThunk';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowCustomers() {\n  _s();\n\n  debugger;\n  let myCustomer, myAddCustomer, myCustomerId;\n  const dispatch = useDispatch();\n  let myCustomersFromServer = useSelector(store => {\n    console.log(store.customers.customers1);\n    if (store.customers.customers1 != undefined && store.customers.customers1.length > 0) return store.customers.customers1[0].data;else return undefined;\n  });\n  useEffect(async () => {\n    let okmyCustomersFromServer = await getAllCustomersFromServer(dispatch); // await console.log(myCustomersFromServer)\n    // await setcustomersList(myCustomersFromServer)\n    // console.log(customersList)\n    // myCustomer = await getCustomerFromserverById(dispatch,1,\"611611\");\n    // await console.log(myCustomer)\n    //   await setoneCustomer(myCustomer)\n    // myCustomerId = await getCustomerFromserverById1(dispatch,1);\n    // await console.log(myCustomerId)\n    //   await setoneCustomer(myCustomerId)\n    //   myAddCustomer = await addCustomer(dispatch,5,\"sh\",\"711711\",\"322461309\");   \n    //         await console.log(\"הוספת לקוח  \"+myAddCustomer);\n    //         await setcustomersList(myAddCustomer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DC\\u05E7\\u05D5\\u05D7\\u05D5\\u05EA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), myCustomersFromServer != undefined ? myCustomersFromServer.length > 0 && myCustomersFromServer.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.nameCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u05D0\\u05D9\\u05DF \\u05DC\\u05E7\\u05D5\\u05D7\\u05D5\\u05EA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n} //  import React from 'react';\n//  import { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\n//  const BasicTable = () => {\n//    return (\n//      <MDBTable responsive>\n//        <MDBTableHead>\n//          <tr>\n//            <th>#</th>\n//            <th>Heading</th>\n//            <th>Heading</th>\n//            <th>Heading</th>\n//            <th>Heading</th>\n//          </tr>\n//        </MDBTableHead>\n//        <MDBTableBody>\n//          <tr>\n//            <td>1</td>\n//            <td>Cell</td>\n//            <td>Cell</td>\n//            <td>Cell</td>\n//            <td>Cell</td>\n//          </tr>\n//        </MDBTableBody>\n//      </MDBTable>\n//    );\n//  }\n//  export default BasicTable;\n\n_s(ShowCustomers, \"q1BaEfV6U5UWFdjKpLpIERvTmdo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ShowCustomers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowCustomers\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/לימודים שנה ב/react/פרוייקט חנוכה/MDB 2 React/src/Comp/showCustomers.js"],"names":["useEffect","getAllCustomersFromServer","getCustomerFromserverById","addCustomer","useDispatch","useSelector","MDBTable","MDBTableBody","MDBTableHead","ShowCustomers","myCustomer","myAddCustomer","myCustomerId","dispatch","myCustomersFromServer","store","console","log","customers","customers1","undefined","length","data","okmyCustomersFromServer","map","item","nameCustomer"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,EAAmCC,yBAAnC,EAA6DC,WAA7D,QAAgF,kCAAhF;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,UAArD;;;AAGA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACvC;AACC,MAAIC,UAAJ,EAAeC,aAAf,EAA6BC,YAA7B;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAIU,qBAAqB,GAAGT,WAAW,CAAEU,KAAD,IAAW;AAEjDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAN,CAAgBC,UAA5B;AACA,QAAIJ,KAAK,CAACG,SAAN,CAAgBC,UAAhB,IAA8BC,SAA9B,IAA2CL,KAAK,CAACG,SAAN,CAAgBC,UAAhB,CAA2BE,MAA3B,GAAoC,CAAnF,EACE,OAAON,KAAK,CAACG,SAAN,CAAgBC,UAAhB,CAA2B,CAA3B,EAA8BG,IAArC,CADF,KAIE,OAAOF,SAAP;AACH,GARsC,CAAvC;AAYApB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIuB,uBAAuB,GAAG,MAAMtB,yBAAyB,CAACY,QAAD,CAA7D,CADoB,CAGpB;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEG,GApBI,EAoBF,EApBE,CAAT;AAqBG,sBAAM;AAAA,4BAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFM,EAILC,qBAAqB,IAAIM,SAAzB,GACAN,qBAAqB,CAACO,MAAtB,GAA+B,CAA/B,IACAP,qBAAqB,CAACU,GAAtB,CAA2BC,IAAD,iBACrB;AAAA,gBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YADL,CAFA,gBAOK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBAAN;AAgBH,C,CAKF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GAvFwBjB,a;UAGLL,W,EACWC,W;;;KAJNI,a","sourcesContent":["import { useEffect } from \"react\";\r\nimport { getAllCustomersFromServer,getCustomerFromserverById,addCustomer } from '../Redux/Customer/CustomersThunk'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n \r\n  \r\nexport default function ShowCustomers() {\r\n debugger;\r\n  let myCustomer,myAddCustomer,myCustomerId\r\n  const dispatch = useDispatch();\r\n  let myCustomersFromServer = useSelector((store) => {\r\n    \r\n    console.log(store.customers.customers1);\r\n    if (store.customers.customers1 != undefined && store.customers.customers1.length > 0)\r\n      return store.customers.customers1[0].data\r\n      \r\n    else\r\n      return undefined\r\n  }\r\n  )\r\n  \r\n\r\n  useEffect(async () => {\r\n    let okmyCustomersFromServer = await getAllCustomersFromServer(dispatch);\r\n\r\n    // await console.log(myCustomersFromServer)\r\n    // await setcustomersList(myCustomersFromServer)\r\n    // console.log(customersList)\r\n\r\n    \r\n    // myCustomer = await getCustomerFromserverById(dispatch,1,\"611611\");\r\n    // await console.log(myCustomer)\r\n    //   await setoneCustomer(myCustomer)\r\n\r\n    // myCustomerId = await getCustomerFromserverById1(dispatch,1);\r\n    // await console.log(myCustomerId)\r\n    //   await setoneCustomer(myCustomerId)\r\n\r\n    //   myAddCustomer = await addCustomer(dispatch,5,\"sh\",\"711711\",\"322461309\");   \r\n    //         await console.log(\"הוספת לקוח  \"+myAddCustomer);\r\n    //         await setcustomersList(myAddCustomer);\r\n\r\n      }, [])\r\n     return<>\r\n     \r\n     <h2>לקוחות</h2>\r\n     {\r\n      myCustomersFromServer != undefined ?\r\n      myCustomersFromServer.length > 0 &&\r\n      myCustomersFromServer.map((item) =>\r\n           <p>{item.nameCustomer}</p>\r\n           \r\n           \r\n      )   \r\n         : <div>אין לקוחות</div>\r\n \r\n     }\r\n   </>\r\n   \r\n }\r\n \r\n\r\n\r\n    \r\n//  import React from 'react';\r\n//  import { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n \r\n//  const BasicTable = () => {\r\n//    return (\r\n//      <MDBTable responsive>\r\n//        <MDBTableHead>\r\n//          <tr>\r\n//            <th>#</th>\r\n//            <th>Heading</th>\r\n//            <th>Heading</th>\r\n//            <th>Heading</th>\r\n//            <th>Heading</th>\r\n           \r\n//          </tr>\r\n//        </MDBTableHead>\r\n//        <MDBTableBody>\r\n//          <tr>\r\n//            <td>1</td>\r\n//            <td>Cell</td>\r\n//            <td>Cell</td>\r\n//            <td>Cell</td>\r\n//            <td>Cell</td>\r\n//          </tr>\r\n//        </MDBTableBody>\r\n//      </MDBTable>\r\n//    );\r\n//  }\r\n \r\n//  export default BasicTable;\r\n "]},"metadata":{},"sourceType":"module"}