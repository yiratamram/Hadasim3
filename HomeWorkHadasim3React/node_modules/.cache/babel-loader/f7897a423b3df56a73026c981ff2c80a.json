{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05D9\\u05E8\\u05D0\\u05EA \\u05E2\\u05DE\\u05E8\\u05DD\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D7\\u05D9\\u05E6\\u05D5\\u05E0\\u05D9\\\\ProfileCustomerReact\\\\src\\\\Components\\\\SighUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { BrowserRouter, Switch, Route, Link, NavLink } from \"react-router-dom\";\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { addCompany } from '../Redux/Companies/CompaniesThunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = Props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState({\n    PrivateEmail: \"שדה חובה\",\n    UserName: \"שדה חובה\",\n    UserPassword: \"שדה חובה\"\n  });\n  const [company, setCompany] = useState(!Props.company ? {} : Props.company);\n\n  const newCompany = async dispatch => {\n    let NameCompany = document.getElementById(\"NameCompany\").value;\n    let PrivateEmail = document.getElementById(\"PrivateEmail\").value;\n    let CustomerServiceEmail = document.getElementById(\"CustomerServiceEmail\").value;\n    let CustomerServiceEmailPassword = document.getElementById(\"CustomerServiceEmailPassword\").value;\n    let UserName = document.getElementById(\"UserName\").value;\n    let UserPassword = document.getElementById(\"UserPassword\").value;\n\n    if (PrivateEmail && UserName && UserPassword) {\n      const company = await addCompany(dispatch, NameCompany, PrivateEmail, CustomerServiceEmail, CustomerServiceEmailPassword, UserName, UserPassword);\n      alert(\"ברוך הבא \" + UserName + \" לאתרינו מקווים שתהיה לך את חווית הגלישה הטובה\");\n      return company;\n    } else {\n      alert(\"אנא מלא את כל השדות \");\n    }\n  }; //בדיקת תקינות של שם\n\n\n  const validateName = event => {\n    if (!event.target.value) setErrors({ ...errors,\n      UserName: \"שדה חובה\"\n    });else if (event.target.value.includes(\" \")) setErrors({ ...errors,\n      UserName: \"אין לשים רווח\"\n    });else {\n      setErrors({ ...errors,\n        UserName: \"תקין!\"\n      });\n    }\n    setCompany({ ...company,\n      UserName: event.target.value\n    });\n  }; //בדיקת תקינות של סיסמא\n\n\n  const validatePass = event => {\n    var passw = /^[A-Za-z]\\w{7,14}$/;\n\n    if (event.target.value.match(passw)) {\n      setErrors({ ...errors,\n        pass: \"תקין!\"\n      });\n    } else {\n      setErrors({ ...errors,\n        pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter'\n      });\n    }\n\n    setCompany({ ...company,\n      UserPassword: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h5 text-center mb-4\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grey-text\",\n            children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your Company Name\",\n              id: \"NameCompany\",\n              value: company.NameCompany,\n              onChange: e => {\n                validateName(e);\n              },\n              icon: \"user\",\n              group: true,\n              type: \"text\",\n              validate: true,\n              error: \"wrong\",\n              success: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your Private email\",\n              id: \"PrivateEmail\",\n              value: company.PrivateEmail,\n              icon: \"envelope\",\n              group: true,\n              type: \"email\",\n              validate: true,\n              error: \"wrong\",\n              success: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your Customer service email\",\n              id: \"CustomerServiceEmail\",\n              value: company.CustomerServiceEmail,\n              icon: \"envelope\",\n              group: true,\n              type: \"email\",\n              validate: true,\n              error: \"wrong\",\n              success: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your Customer service email password\",\n              id: \"CustomerServiceEmailPassword\",\n              value: company.CustomerServiceEmailPassword,\n              onChange: e => {\n                validatePass(e);\n              },\n              icon: \"lock\",\n              group: true,\n              type: \"password\",\n              validate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your User name\",\n              id: \"UserName\",\n              value: company.UserName,\n              icon: \"user\",\n              group: true,\n              type: \"text\",\n              validate: true,\n              error: \"wrong\",\n              success: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your User password\",\n              id: \"UserPassword\",\n              value: company.UserPassword,\n              onChange: e => {\n                validatePass(e);\n              },\n              icon: \"lock\",\n              group: true,\n              type: \"password\",\n              validate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"primary\",\n              onClick: () => newCompany(dispatch),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 1\n  }, this);\n};\n\n_s(SignUp, \"3TycRtKzJ2J2cdeFyeL7f8xiiT8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/פרוייקט חיצוני/ProfileCustomerReact/src/Components/SighUp.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","BrowserRouter","Switch","Route","Link","NavLink","useState","useDispatch","addCompany","SignUp","Props","dispatch","errors","setErrors","PrivateEmail","UserName","UserPassword","company","setCompany","newCompany","NameCompany","document","getElementById","value","CustomerServiceEmail","CustomerServiceEmailPassword","alert","validateName","event","target","includes","validatePass","passw","match","pass","e"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    NavLink,\r\n    \r\n  } from \"react-router-dom\";\r\n   import  {useState} from 'react';\r\n   import { useDispatch } from \"react-redux\";\r\n   import {addCompany} from '../Redux/Companies/CompaniesThunk'\r\n\r\nconst SignUp = (Props) => {\r\n    const dispatch = useDispatch();\r\n       \r\n     const [errors, setErrors]=useState({PrivateEmail:\"שדה חובה\", UserName:\"שדה חובה\",UserPassword:\"שדה חובה\"});\r\n     const [company, setCompany]=useState(!Props.company?{}:Props.company);\r\n  \r\n      const newCompany=async(dispatch)=>{\r\n       \r\n       let NameCompany=document.getElementById(\"NameCompany\").value\r\n       let PrivateEmail=document.getElementById(\"PrivateEmail\").value\r\n       let CustomerServiceEmail=document.getElementById(\"CustomerServiceEmail\").value\r\n       let CustomerServiceEmailPassword=document.getElementById(\"CustomerServiceEmailPassword\").value\r\n       let UserName=document.getElementById(\"UserName\").value\r\n       let UserPassword=document.getElementById(\"UserPassword\").value\r\n       \r\n      if(PrivateEmail&&UserName&&UserPassword)\r\n      {\r\n      \r\n        const company=await addCompany(dispatch,NameCompany,PrivateEmail ,CustomerServiceEmail,CustomerServiceEmailPassword,UserName,UserPassword);\r\n        alert(\"ברוך הבא \"+UserName+\" לאתרינו מקווים שתהיה לך את חווית הגלישה הטובה\");\r\n        return company\r\n      }\r\n      else\r\n      {\r\n     \r\n       alert(\"אנא מלא את כל השדות \");\r\n       \r\n    }\r\n    }\r\n   \r\n     \r\n\r\n     //בדיקת תקינות של שם\r\n     const validateName=(event)=>{\r\n  \r\n      if(!event.target.value)\r\n      setErrors({...errors, UserName:\"שדה חובה\"});\r\n      else if (event.target.value.includes(\" \"))\r\n      setErrors({...errors, UserName:\"אין לשים רווח\"});\r\n  else {\r\n      setErrors({...errors, UserName:\"תקין!\"});\r\n  }\r\n  setCompany({...company, UserName: event.target.value })\r\n  }\r\n  \r\n  //בדיקת תקינות של סיסמא\r\n  const validatePass=(event)=>\r\n  {\r\n      \r\n  var passw = /^[A-Za-z]\\w{7,14}$/;\r\n  if (event.target.value.match(passw)) {\r\n    setErrors({...errors, pass: \"תקין!\"} );\r\n  }\r\n  else {\r\n    setErrors({...errors, pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter' })\r\n  }\r\n  setCompany({...company, UserPassword: event.target.value })\r\n  }\r\n  \r\n\r\n   \r\nreturn (\r\n<MDBContainer>\r\n  <MDBRow>\r\n    <MDBCol md=\"6\">\r\n      <form>\r\n        <p className=\"h5 text-center mb-4\">Sign up</p>\r\n        <div className=\"grey-text\">\r\n          <MDBInput label=\"Your Company Name\" id=\"NameCompany\" value={company.NameCompany} onChange={(e)=>{validateName(e)}} icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n            success=\"right\" />\r\n          <MDBInput label=\"Your Private email\" id=\"PrivateEmail\" value={company.PrivateEmail} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n            success=\"right\" />\r\n            <MDBInput label=\"Your Customer service email\" id=\"CustomerServiceEmail\" value={company.CustomerServiceEmail} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n            success=\"right\" />\r\n            <MDBInput label=\"Your Customer service email password\" id=\"CustomerServiceEmailPassword\" value={company.CustomerServiceEmailPassword} onChange={(e)=>{validatePass(e)}} icon=\"lock\" group type=\"password\" validate />\r\n\r\n            <MDBInput label=\"Your User name\" id=\"UserName\" value={company.UserName} icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n            success=\"right\" />\r\n          \r\n          <MDBInput label=\"Your User password\" id=\"UserPassword\" value={company.UserPassword}  onChange={(e)=>{validatePass(e)}} icon=\"lock\" group type=\"password\" validate />\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <MDBBtn color=\"primary\" onClick={() => newCompany(dispatch)}>Register</MDBBtn>\r\n        </div>\r\n      </form>\r\n    </MDBCol>\r\n  </MDBRow>\r\n</MDBContainer>\r\n);\r\n}\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}