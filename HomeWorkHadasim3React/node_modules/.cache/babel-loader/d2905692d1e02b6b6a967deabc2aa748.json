{"ast":null,"code":"// import axios from \"axios\"\n// import { useDispatch } from \"react-redux\";\n// import {CalculationProfile,AveragePos,AverageNeg,AverageUnsup,Pnu } from \"./ProfileCalculationsAction\";\n// export const ProfileCalculationsURL=\"http://localhost:21507/api/ProfileCalculations/\"\n// export const calculationProfile = async (dispatch,codeCompany,calculationDate,fromDate,toDate) => {\n//     debugger;\n//     const calculationProfile  = { codeCompany:codeCompany,calculationDate: calculationDate,fromDate:fromDate,toDate:toDate};\n//     try {\n//         const calculationProfilePromise = await axios.post(ProfileCalculationsURL + \"CalculationProfile/\", calculationProfile);\n//         await dispatch(CalculationProfile(calculationProfilePromise.data));\n//          const response = await calculationProfilePromise;\n//         return calculationProfilePromise.data;\n//     }\n//     catch (e) {\n//         console.log(e);\n//     }\n// }\n// export const averagePos = async (code) => {\n//     debugger;\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"AveragePos?codeCompany=\"+code);\n//     const response = await calculationProfilePromise;\n//     const calculationProfile = response.data;\n//     (AveragePos(calculationProfile))\n//     return calculationProfile;\n// }\n// export const averageNeg = async (code) => {\n//     debugger;\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"AverageNeg?codeCompany=\"+code);\n//     const response = await calculationProfilePromise;\n//     const calculationProfile = response.data;\n//     (AverageNeg(calculationProfile))\n//     return calculationProfile;\n// }\n// export const averageUnsup = async (code) => {\n//     debugger;\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"AverageUnsup?codeCompany=\"+code);\n//     const response = await calculationProfilePromise;\n//     const calculationProfile = response.data;\n//     (AverageUnsup(calculationProfile))\n//     return calculationProfile;\n// }\n// export const pnu = async (code) => {\n//     debugger;\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"Pnu?codeCompany=\"+code);\n//     const response = await calculationProfilePromise;\n//     const calculationProfile = response.data;\n//     (Pnu(calculationProfile))\n//     return calculationProfile;\n// }","map":{"version":3,"sources":["D:/Programing/HadasimProject/HomeWorkHadasim3React/src/Redux/ProfileCalculations/ProfileCalculationsThunk.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import axios from \"axios\"\r\n// import { useDispatch } from \"react-redux\";\r\n// import {CalculationProfile,AveragePos,AverageNeg,AverageUnsup,Pnu } from \"./ProfileCalculationsAction\";\r\n// export const ProfileCalculationsURL=\"http://localhost:21507/api/ProfileCalculations/\"\r\n\r\n// export const calculationProfile = async (dispatch,codeCompany,calculationDate,fromDate,toDate) => {\r\n//     debugger;\r\n//     const calculationProfile  = { codeCompany:codeCompany,calculationDate: calculationDate,fromDate:fromDate,toDate:toDate};\r\n//     try {\r\n//         const calculationProfilePromise = await axios.post(ProfileCalculationsURL + \"CalculationProfile/\", calculationProfile);\r\n//         await dispatch(CalculationProfile(calculationProfilePromise.data));\r\n//          const response = await calculationProfilePromise;\r\n//         return calculationProfilePromise.data;\r\n//     }\r\n//     catch (e) {\r\n//         console.log(e);\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// export const averagePos = async (code) => {\r\n//     debugger;\r\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"AveragePos?codeCompany=\"+code);\r\n//     const response = await calculationProfilePromise;\r\n//     const calculationProfile = response.data;\r\n//     (AveragePos(calculationProfile))\r\n//     return calculationProfile;\r\n\r\n// }\r\n// export const averageNeg = async (code) => {\r\n//     debugger;\r\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"AverageNeg?codeCompany=\"+code);\r\n//     const response = await calculationProfilePromise;\r\n//     const calculationProfile = response.data;\r\n//     (AverageNeg(calculationProfile))\r\n//     return calculationProfile;\r\n\r\n// }\r\n// export const averageUnsup = async (code) => {\r\n//     debugger;\r\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"AverageUnsup?codeCompany=\"+code);\r\n//     const response = await calculationProfilePromise;\r\n//     const calculationProfile = response.data;\r\n//     (AverageUnsup(calculationProfile))\r\n//     return calculationProfile;\r\n\r\n// }\r\n\r\n// export const pnu = async (code) => {\r\n//     debugger;\r\n//     const calculationProfilePromise = axios.get(ProfileCalculationsURL+\"Pnu?codeCompany=\"+code);\r\n//     const response = await calculationProfilePromise;\r\n//     const calculationProfile = response.data;\r\n//     (Pnu(calculationProfile))\r\n//     return calculationProfile;\r\n\r\n// }\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}