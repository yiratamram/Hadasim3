{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { GetCustomer, GetCustomerId, GetAllCustomers, AddCustomer } from './CustomerAction';\nimport { UpdateProductFromBasket } from './CustomerAction';\nimport { useSelector } from \"react-redux\";\nexport const defaultURL = \"http://localhost:10362\";\nexport const getAllCustomersFromServer = async dispatch => {\n  const customersPromise = axios.get(defaultURL + \"/GetAllCustomers\");\n  const response = await customersPromise;\n  const customers = response.data;\n  dispatch(GetAllCustomers(customers));\n  return customers;\n};\nexport const getCustomerFromserverByIdAndPass = async (dispatch, id, pass) => {\n  const customersPromise = axios.get(defaultURL + \"/GetCustomer/\" + id + \"%2C\" + pass + \"?Id=\" + id + \"&Password=\" + pass);\n  const response = await customersPromise;\n  const customer = response.data;\n  console.log(customer);\n  dispatch(GetCustomer(customer));\n  return customer;\n};\nexport const getCustomerFromserverById = async (dispatch, id) => {\n  const customersPromise = axios.get(defaultURL + \"/GetCustomerId/\" + id);\n  const response = await customersPromise;\n  const customer = response.data;\n  console.log(customer);\n  dispatch(GetCustomerId(customer));\n  return customer;\n};\nexport const addCustomer = async (dispatch, idCustomer, nameCustomer, passwordCustomer, creditcardCustomer) => {\n  try {\n    debugger;\n    const newCustomer = {\n      idCustomer: idCustomer,\n      nameCustomer: nameCustomer,\n      passwordCustomer: passwordCustomer,\n      creditcardCustomer: creditcardCustomer\n    };\n    const customerPromise = await axios.post(defaultURL + \"/AddCustomer\", newCustomer);\n    console.log(customerPromise);\n    await dispatch(AddCustomer(customerPromise.data));\n    return customerPromise.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const updateCustomer = async (dispatch, idCustomer, nameCustomer, passwordCustomer, creditcardCustomer) => {\n  const updateCustomer = {\n    idCustomer: idCustomer,\n    nameCustomer: nameCustomer,\n    passwordCustomer: passwordCustomer,\n    creditcardCustomer: creditcardCustomer\n  };\n\n  try {\n    const customerPromise = await axios.put(defaultURL + \"/UpdateCustomer/\", updateCustomer);\n    await dispatch(UpdateCustomer(customerPromise.data));\n    const response = await customerPromise;\n    return customerPromise.data;\n  } catch (e) {\n    console.log(e);\n  }\n}; //פונקציות של הסל קניות\n\nexport const updateProductBasket = async (dispatch, ProductUpp) => {\n  _s();\n\n  const Basket = useSelector(s => {\n    return s.customers.basket;\n  });\n  let user;\n\n  for (i = 0; i < Basket; i++) if (x.codePicture == ProductUpp.codePicture) user = x;\n\n  user.IdProduct = ProductUpp.IdProduct, user.NameProduct = ProductUpp.NameProduct, user.Amount = 1, user.PriceProduct = PriceProduct.price, user.FinallyPrice = ProductUpp.FinallyPrice * ProductUpp.Amount;\n  await dispatch(UpdateProductFromBasket(Basket));\n  return Basket;\n};\n\n_s(updateProductBasket, \"wKp5zdxQhj81PfPKOLS6KFkfAuU=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/לימודים שנה ב/react/פרוייקט חנוכה/MDB 2 React/src/Redux/Customer/CustomersThunk.js"],"names":["axios","useDispatch","GetCustomer","GetCustomerId","GetAllCustomers","AddCustomer","UpdateProductFromBasket","useSelector","defaultURL","getAllCustomersFromServer","dispatch","customersPromise","get","response","customers","data","getCustomerFromserverByIdAndPass","id","pass","customer","console","log","getCustomerFromserverById","addCustomer","idCustomer","nameCustomer","passwordCustomer","creditcardCustomer","newCustomer","customerPromise","post","e","updateCustomer","put","UpdateCustomer","updateProductBasket","ProductUpp","Basket","s","basket","user","i","x","codePicture","IdProduct","NameProduct","Amount","PriceProduct","price","FinallyPrice"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport {GetCustomer,GetCustomerId,GetAllCustomers,AddCustomer} from './CustomerAction';\r\nimport {UpdateProductFromBasket} from './CustomerAction'\r\nimport { useSelector } from \"react-redux\";\r\nexport const defaultURL=\"http://localhost:10362\"\r\n\r\n\r\n export const getAllCustomersFromServer=async(dispatch)=>\r\n{\r\n    const customersPromise=axios.get(defaultURL+\"/GetAllCustomers\");\r\n     const response=await customersPromise;\r\n     const customers=response.data;\r\n     dispatch(GetAllCustomers(customers))\r\n     return customers;\r\n }\r\n \r\n \r\n\r\nexport const getCustomerFromserverByIdAndPass = async (dispatch,id,pass) => {\r\n    \r\n    const customersPromise = axios.get(defaultURL+\"/GetCustomer/\"+id+\"%2C\"+pass+\"?Id=\"+id+\"&Password=\"+pass);\r\n    const response = await customersPromise;\r\n    const customer = response.data;\r\n    console.log(customer);\r\n    dispatch(GetCustomer(customer))\r\n    return customer;\r\n\r\n}\r\nexport const getCustomerFromserverById = async (dispatch,id) => {\r\n    \r\n    const customersPromise = axios.get(defaultURL+\"/GetCustomerId/\"+id);\r\n    const response = await customersPromise;\r\n    const customer = response.data;\r\n    console.log(customer);\r\n    dispatch(GetCustomerId(customer))\r\n    return customer;\r\n\r\n}\r\n export const addCustomer=async(dispatch,idCustomer,nameCustomer,passwordCustomer,creditcardCustomer)=>\r\n  {   \r\n      \r\n      \r\n       try{\r\n           debugger;\r\n        const newCustomer={ idCustomer:idCustomer,nameCustomer: nameCustomer,passwordCustomer:passwordCustomer,creditcardCustomer:creditcardCustomer};\r\n       const customerPromise =await axios.post(defaultURL+\"/AddCustomer\",newCustomer);\r\n       console.log(customerPromise);\r\n       await  dispatch(AddCustomer(customerPromise.data));\r\n       return customerPromise.data;\r\n       }\r\n       catch(e){\r\n           console.log(e);\r\n       }\r\n       \r\n    }\r\n    export const updateCustomer = async (dispatch,idCustomer,nameCustomer,passwordCustomer,creditcardCustomer) => {\r\n        const updateCustomer  = { idCustomer:idCustomer,nameCustomer: nameCustomer,passwordCustomer:passwordCustomer,creditcardCustomer:creditcardCustomer };\r\n        try {\r\n            const customerPromise = await axios.put(defaultURL + \"/UpdateCustomer/\", updateCustomer);\r\n            await dispatch(UpdateCustomer(customerPromise.data));\r\n            const response = await customerPromise;\r\n            return customerPromise.data;\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n//פונקציות של הסל קניות\r\nexport const updateProductBasket =async(dispatch,ProductUpp)=>     \r\n{   \r\n      const Basket=useSelector((s)=>{return s.customers.basket});\r\n\r\nlet user;\r\n     \r\n     for(i=0;i<Basket;i++)\r\n     if(x.codePicture==ProductUpp.codePicture)\r\n     user=x;\r\n    \r\n     user.IdProduct=ProductUpp.IdProduct,\r\n     user.NameProduct=ProductUpp.NameProduct,\r\n     user.Amount=1,\r\n     user.PriceProduct=PriceProduct.price,\r\n     user.FinallyPrice=ProductUpp.FinallyPrice*ProductUpp.Amount\r\n      \r\nawait dispatch(UpdateProductFromBasket(Basket));\r\nreturn Basket;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}