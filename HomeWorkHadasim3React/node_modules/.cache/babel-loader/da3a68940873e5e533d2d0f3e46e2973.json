{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05D9\\u05E8\\u05D0\\u05EA \\u05E2\\u05DE\\u05E8\\u05DD\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD \\u05E9\\u05E0\\u05D4 \\u05D1\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D7\\u05E0\\u05D5\\u05DB\\u05D4\\\\MDB 2 React\\\\src\\\\Comp\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormPage = Props => {\n  _s();\n\n  const [errors, setErrors] = useState({\n    id: \"שדה חובה\",\n    pass: \"שדה חובה\"\n  });\n  const [customer, setCustomer] = useState(!Props.customer ? {} : Props.customer);\n\n  const newCustomer = () => {\n    /*#__PURE__*/\n    _jsxDEV(FormPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this); //בדיקת תקינות של שם\n\n\n    const validateName = event => {\n      if (!event.target.value) setErrors({ ...errors,\n        CustomerName: \"שדה חובה\"\n      });else if (event.target.value.includes(\" \")) setErrors({ ...errors,\n        CustomerName: \"אין לשים רווח\"\n      });else {\n        setErrors({ ...errors,\n          CustomerName: \"תקין!\"\n        });\n      }\n      setUser({ ...customer,\n        CustomerName: event.target.value\n      });\n    }; //בדיקת תקינות של סיסמא\n\n\n    const validatePass = event => {\n      var passw = /^[A-Za-z]\\w{7,14}$/;\n\n      if (event.target.value.match(passw)) {\n        setErrors({ ...errors,\n          pass: \"תקין!\"\n        });\n      } else {\n        setErrors({ ...errors,\n          pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter'\n        });\n      }\n\n      setUser({ ...customer,\n        CustomerPassword: event.target.value\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"h4 text-center mb-4\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"defaultFormRegisterNameEx\",\n              className: \"grey-text\",\n              children: \"Your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"defaultFormRegisterNameEx\",\n              value: customer.CustomerName,\n              onChange: e => {\n                validateName(e);\n              },\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", errors.CustomerName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"defaultFormRegisteridEx\",\n              className: \"grey-text\",\n              children: \"Your id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"defaultFormRegisteridEx\",\n              value: customer.CustomerId,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"defaultFormRegistercreaditCardEx\",\n              className: \"grey-text\",\n              children: \"Your creaditCard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"defaultFormRegistercreaditCardEx\",\n              value: customer.CustomerCreditcard,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", errors.CustomerPassword]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"defaultFormRegisterPasswordEx\",\n              className: \"grey-text\",\n              children: \"Your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"defaultFormRegisterPasswordEx\",\n              value: customer.CustomerPassword,\n              onChange: e => {\n                validatePass(e);\n              },\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-4\",\n              children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                color: \"unique\",\n                type: \"submit\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this);\n  };\n};\n\n_s(FormPage, \"TmnWaujnWbH1Pk8laSzzCjnd1Xo=\");\n\n_c = FormPage;\nexport default FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/לימודים שנה ב/react/פרוייקט חנוכה/MDB 2 React/src/Comp/SignUp.jsx"],"names":["React","useState","MDBContainer","MDBRow","MDBCol","MDBBtn","FormPage","Props","errors","setErrors","id","pass","customer","setCustomer","newCustomer","validateName","event","target","value","CustomerName","includes","setUser","validatePass","passw","match","CustomerPassword","e","CustomerId","CustomerCreditcard"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport  {useState} from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\n\r\nconst FormPage = (Props) => {\r\n    const [errors, setErrors]=useState({id:\"שדה חובה\", pass:\"שדה חובה\"});\r\n     const [customer, setCustomer]=useState(!Props.customer?{}:Props.customer);\r\n     const newCustomer=()=>{\r\n    <FormPage></FormPage>\r\n\r\n//בדיקת תקינות של שם\r\n    const validateName=(event)=>{\r\n\r\n        if(!event.target.value)\r\n        setErrors({...errors, CustomerName:\"שדה חובה\"});\r\n        else if (event.target.value.includes(\" \"))\r\n        setErrors({...errors, CustomerName:\"אין לשים רווח\"});\r\n    else {\r\n        setErrors({...errors, CustomerName:\"תקין!\"});\r\n    }\r\n    setUser({...customer, CustomerName: event.target.value })\r\n    }\r\n\r\n//בדיקת תקינות של סיסמא\r\n    const validatePass=(event)=>\r\n{\r\n    \r\nvar passw = /^[A-Za-z]\\w{7,14}$/;\r\nif (event.target.value.match(passw)) {\r\n  setErrors({...errors, pass: \"תקין!\"} );\r\n}\r\nelse {\r\n  setErrors({...errors, pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter' })\r\n}\r\nsetUser({...customer, CustomerPassword: event.target.value })\r\n\r\n}\r\nreturn (\r\n<MDBContainer>\r\n  <MDBRow>\r\n    <MDBCol md=\"6\">\r\n      <form>\r\n        <p className=\"h4 text-center mb-4\">Sign up</p>\r\n        <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\">\r\n          Your name\r\n        </label>\r\n        <input type=\"text\" id=\"defaultFormRegisterNameEx\" value={customer.CustomerName} onChange={(e)=>{validateName(e)}} className=\"form-control\" />\r\n        <p > {errors.CustomerName}</p>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisteridEx\" className=\"grey-text\">\r\n          Your id\r\n        </label>\r\n        <input type=\"text\" id=\"defaultFormRegisteridEx\" value={customer.CustomerId} className=\"form-control\" />\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegistercreaditCardEx\" className=\"grey-text\">\r\n          Your creaditCard\r\n        </label>\r\n        <input type=\"text\" id=\"defaultFormRegistercreaditCardEx\" value={customer.CustomerCreditcard} className=\"form-control\" />\r\n        <p > {errors.CustomerPassword}</p>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisterPasswordEx\" className=\"grey-text\">\r\n          Your password\r\n        </label>\r\n        <input type=\"password\" id=\"defaultFormRegisterPasswordEx\" value={customer.CustomerPassword} onChange={(e)=>{validatePass(e)}} className=\"form-control\" />\r\n        <div className=\"text-center mt-4\">\r\n          <MDBBtn color=\"unique\" type=\"submit\">\r\n            Register\r\n          </MDBBtn>\r\n        </div>\r\n      </form>\r\n    </MDBCol>\r\n  </MDBRow>\r\n</MDBContainer>\r\n)\r\n};\r\n}\r\nexport default FormPage;\r\n"]},"metadata":{},"sourceType":"module"}