{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n// import { MDBContainer ,MDBCard,MDBCardBody} from \"mdbreact\";\n// import { useState } from 'react';\n// import { useSelector } from 'react-redux'; \n// import { render } from \"react-dom\";\n// import {averagePos,averageNeg,averageUnsup} from '../Redux/ProfileCalculations/ProfileCalculationsThunk'\n// class ChartsPage extends React.Component {\n//   async componentDidMount() {\n//       const c=this.props.match.params.code\n//       const myData1 = await averagePos(c);\n//       this.state.dataLine.datasets[0].data=myData1\n//       const myData2 = await averageNeg(c);\n//       this.state.dataLine.datasets[1].data=myData2\n//       const myData3 = await averageUnsup(c);\n//       this.state.dataLine.datasets[2].data=myData3\n//   }\n//   state = {\n//     dataLine: {\n//       labels: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\",\"אוגוסט\",\"ספטמבר\",\"אוקטובר\",\"נובמבר\",\"דצמבר\"],\n//       datasets: [\n//         {\n//           label: \"ביקורות חיוביות\",\n//           fill: true,\n//           lineTension: 0.3,\n//           backgroundColor: \"rgba(225, 204,230, .3)\",\n//           borderColor: \"rgb(205, 130, 158)\",\n//           borderCapStyle: \"butt\",\n//           borderDash: [],\n//           borderDashOffset: 0.0,\n//           borderJoinStyle: \"miter\",\n//           pointBorderColor: \"rgb(205, 130,1 58)\",\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\n//           pointBorderWidth: 10,\n//           pointHoverRadius: 5,\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n//           pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n//           pointHoverBorderWidth: 2,\n//           pointRadius: 1,\n//           pointHitRadius: 10,\n//           data: []\n//         },\n//         {\n//           label: \"בקורות שליליות\",\n//           fill: true,\n//           lineTension: 0.3,\n//           backgroundColor: \"rgba(184, 185, 210, .3)\",\n//           borderColor: \"rgb(35, 26, 136)\",\n//           borderCapStyle: \"butt\",\n//           borderDash: [],\n//           borderDashOffset: 0.0,\n//           borderJoinStyle: \"miter\",\n//           pointBorderColor: \"rgb(35, 26, 136)\",\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\n//           pointBorderWidth: 10,\n//           pointHoverRadius: 5,\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n//           pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n//           pointHoverBorderWidth: 2,\n//           pointRadius: 1,\n//           pointHitRadius: 10,\n//           data:[]\n//         },{\n//           label: \"ביקורות נטרליות\",\n//           fill: true,\n//           lineTension: 0.3,\n//           backgroundColor: \"rgba(184, 185, 210, .3)\",\n//           borderColor: \"#FDB45C\",\n//           borderCapStyle: \"butt\",\n//           borderDash: [],\n//           borderDashOffset: 0.0,\n//           borderJoinStyle: \"miter\",\n//           pointBorderColor: \"#FDB45C\",\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\n//           pointBorderWidth: 10,\n//           pointHoverRadius: 5,\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n//           pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n//           pointHoverBorderWidth: 2,\n//           pointRadius: 1,\n//           pointHitRadius: 10,\n//           data:[]\n//         }\n//       ]\n//     }\n//   };\n//   render() {\n//     return (\n//       <MDBCard style={{opacity:\"0.7\"}}><MDBCardBody><MDBContainer>\n//       <Line class=\"myLine\"data={this.state.dataLine} options={{ responsive: true }} />\n//     </MDBContainer></MDBCardBody></MDBCard>\n//     );\n//   }\n// }\n// export default ChartsPage;","map":{"version":3,"sources":["D:/Programing/HadasimProject/HomeWorkHadasim3React/src/Components/Chart.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { Line } from \"react-chartjs-2\";\r\n// import { MDBContainer ,MDBCard,MDBCardBody} from \"mdbreact\";\r\n// import { useState } from 'react';\r\n// import { useSelector } from 'react-redux'; \r\n// import { render } from \"react-dom\";\r\n\r\n// import {averagePos,averageNeg,averageUnsup} from '../Redux/ProfileCalculations/ProfileCalculationsThunk'\r\n\r\n\r\n// class ChartsPage extends React.Component {\r\n\r\n//   async componentDidMount() {\r\n      \r\n//       const c=this.props.match.params.code\r\n//       const myData1 = await averagePos(c);\r\n//       this.state.dataLine.datasets[0].data=myData1\r\n//       const myData2 = await averageNeg(c);\r\n//       this.state.dataLine.datasets[1].data=myData2\r\n//       const myData3 = await averageUnsup(c);\r\n//       this.state.dataLine.datasets[2].data=myData3\r\n      \r\n//   }\r\n\r\n   \r\n//   state = {\r\n//     dataLine: {\r\n//       labels: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\",\"אוגוסט\",\"ספטמבר\",\"אוקטובר\",\"נובמבר\",\"דצמבר\"],\r\n//       datasets: [\r\n//         {\r\n//           label: \"ביקורות חיוביות\",\r\n//           fill: true,\r\n//           lineTension: 0.3,\r\n//           backgroundColor: \"rgba(225, 204,230, .3)\",\r\n//           borderColor: \"rgb(205, 130, 158)\",\r\n//           borderCapStyle: \"butt\",\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           borderJoinStyle: \"miter\",\r\n//           pointBorderColor: \"rgb(205, 130,1 58)\",\r\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n//           pointBorderWidth: 10,\r\n//           pointHoverRadius: 5,\r\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n//           pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n//           pointHoverBorderWidth: 2,\r\n//           pointRadius: 1,\r\n//           pointHitRadius: 10,\r\n//           data: []\r\n//         },\r\n//         {\r\n//           label: \"בקורות שליליות\",\r\n//           fill: true,\r\n//           lineTension: 0.3,\r\n//           backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n//           borderColor: \"rgb(35, 26, 136)\",\r\n//           borderCapStyle: \"butt\",\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           borderJoinStyle: \"miter\",\r\n//           pointBorderColor: \"rgb(35, 26, 136)\",\r\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n//           pointBorderWidth: 10,\r\n//           pointHoverRadius: 5,\r\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n//           pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n//           pointHoverBorderWidth: 2,\r\n//           pointRadius: 1,\r\n//           pointHitRadius: 10,\r\n//           data:[]\r\n//         },{\r\n//           label: \"ביקורות נטרליות\",\r\n//           fill: true,\r\n//           lineTension: 0.3,\r\n//           backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n//           borderColor: \"#FDB45C\",\r\n//           borderCapStyle: \"butt\",\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           borderJoinStyle: \"miter\",\r\n//           pointBorderColor: \"#FDB45C\",\r\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n//           pointBorderWidth: 10,\r\n//           pointHoverRadius: 5,\r\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n//           pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n//           pointHoverBorderWidth: 2,\r\n//           pointRadius: 1,\r\n//           pointHitRadius: 10,\r\n//           data:[]\r\n//         }\r\n//       ]\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n    \r\n//       <MDBCard style={{opacity:\"0.7\"}}><MDBCardBody><MDBContainer>\r\n     \r\n//       <Line class=\"myLine\"data={this.state.dataLine} options={{ responsive: true }} />\r\n//     </MDBContainer></MDBCardBody></MDBCard>\r\n      \r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ChartsPage;\r\n     \r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}