{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05D9\\u05E8\\u05D0\\u05EA \\u05E2\\u05DE\\u05E8\\u05DD\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD \\u05E9\\u05E0\\u05D4 \\u05D1\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D7\\u05E0\\u05D5\\u05DB\\u05D4\\\\MDB 2 React\\\\src\\\\Comp\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\"; // import { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\n\nimport { addCustomer } from '../Redux/Customer/CustomersThunk'; // //import {store} from '../Redax/Reducers';\n// import { Params } from \"react-router\";\n// import { render } from \"react-dom\";\n// import { MDBAlert } from 'mdbreact';\n// // const FormPage = (Props) => {\n\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormPage = Props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState({\n    id: \"שדה חובה\",\n    pass: \"שדה חובה\"\n  });\n  const [customer, setCustomer] = useState(!Props.customer ? {} : Props.customer);\n\n  const newCustomer = async dispatch => {\n    try {\n      let CustomerName1 = document.getElementById(\"i1\").value;\n      let CustomerId1 = document.getElementById(\"i2\").value;\n      let CustomerPassword1 = document.getElementById(\"i3\").value;\n      let CustomerCreditcard1 = document.getElementById(\"i4\").value;\n\n      if (CustomerId && CustomerPassword) {\n        let a = await addCustomer(dispatch, CustomerId1, CustomerName1, CustomerPassword1, CustomerCreditcard1);\n        console.log(a);\n        alert(\"wellcome\");\n      } else {\n        alert(\"תעודת זהות וסיסמא הינם שדות חובה על מנת להירשם\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }; //בדיקת תקינות של שם\n\n\n  const validateName = event => {\n    if (!event.target.value) setErrors({ ...errors,\n      CustomerName: \"שדה חובה\"\n    });else if (event.target.value.includes(\" \")) setErrors({ ...errors,\n      CustomerName: \"אין לשים רווח\"\n    });else {\n      setErrors({ ...errors,\n        CustomerName: \"תקין!\"\n      });\n    }\n    setCustomer({ ...customer,\n      CustomerName: event.target.value\n    });\n  }; //בדיקת תקינות של סיסמא\n\n\n  const validatePass = event => {\n    var passw = /^[A-Za-z]\\w{7,14}$/;\n\n    if (event.target.value.match(passw)) {\n      setErrors({ ...errors,\n        pass: \"תקין!\"\n      });\n    } else {\n      setErrors({ ...errors,\n        pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter'\n      });\n    }\n\n    setCustomer({ ...customer,\n      CustomerPassword: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h4 text-center mb-4\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegisterNameEx\",\n            className: \"grey-text\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"i1\",\n            value: customer.CustomerName,\n            onChange: e => {\n              validateName(e);\n            },\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", errors.CustomerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegisteridEx\",\n            className: \"grey-text\",\n            children: \"Your id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"i2\",\n            value: customer.CustomerId,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegistercreaditCardEx\",\n            className: \"grey-text\",\n            children: \"Your creaditCard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"i3\",\n            value: customer.CustomerCreditcard,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", errors.CustomerPassword]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegisterPasswordEx\",\n            className: \"grey-text\",\n            children: \"Your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"i4\",\n            value: customer.CustomerPassword,\n            onChange: e => {\n              validatePass(e);\n            },\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4\",\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"deep-orange\",\n              className: \"mb-3\",\n              type: \"submit\",\n              onClick: () => newCustomer(dispatch),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 1\n  }, this);\n};\n\n_s(FormPage, \"8CMwsL+s+s6lHoMbZnAM3gWWKak=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormPage;\nexport default FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/לימודים שנה ב/react/פרוייקט חנוכה/MDB 2 React/src/Comp/SignUp.jsx"],"names":["useState","useDispatch","addCustomer","React","MDBContainer","MDBRow","MDBCol","MDBBtn","FormPage","Props","dispatch","errors","setErrors","id","pass","customer","setCustomer","newCustomer","CustomerName1","document","getElementById","value","CustomerId1","CustomerPassword1","CustomerCreditcard1","CustomerId","CustomerPassword","a","console","log","alert","e","validateName","event","target","CustomerName","includes","validatePass","passw","match","CustomerCreditcard"],"mappings":"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","sourcesContent":["\r\n// import React from \"react\";\r\n import  {useState} from 'react';\r\n import { useDispatch } from \"react-redux\";\r\n// import { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\n import {addCustomer} from '../Redux/Customer/CustomersThunk'\r\n// //import {store} from '../Redax/Reducers';\r\n// import { Params } from \"react-router\";\r\n// import { render } from \"react-dom\";\r\n// import { MDBAlert } from 'mdbreact';\r\n\r\n// // const FormPage = (Props) => {\r\n\r\n\r\n     \r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\n\r\nconst FormPage = (Props) => {\r\n  const dispatch = useDispatch();\r\n  const [errors, setErrors]=useState({id:\"שדה חובה\", pass:\"שדה חובה\"});\r\n   const [customer, setCustomer]=useState(!Props.customer?{}:Props.customer);\r\n\r\n   const newCustomer=async(dispatch)=>{\r\n     try{\r\n     let CustomerName1=document.getElementById(\"i1\").value\r\n     let CustomerId1=document.getElementById(\"i2\").value\r\n     let CustomerPassword1=document.getElementById(\"i3\").value\r\n     let CustomerCreditcard1=document.getElementById(\"i4\").value\r\n    if(CustomerId&&CustomerPassword)\r\n    {\r\n     let a=await addCustomer(dispatch,CustomerId1,CustomerName1 ,CustomerPassword1,CustomerCreditcard1);\r\n      console.log(a);\r\n     alert(\"wellcome\");\r\n     \r\n    }\r\n    else\r\n    {\r\n   \r\n     alert(\"תעודת זהות וסיסמא הינם שדות חובה על מנת להירשם\");\r\n     \r\n   }}\r\n   catch(e){\r\n     console.log(e);\r\n   }\r\n \r\n  }\r\n  \r\n   //בדיקת תקינות של שם\r\n   const validateName=(event)=>{\r\n\r\n    if(!event.target.value)\r\n    setErrors({...errors, CustomerName:\"שדה חובה\"});\r\n    else if (event.target.value.includes(\" \"))\r\n    setErrors({...errors, CustomerName:\"אין לשים רווח\"});\r\nelse {\r\n    setErrors({...errors, CustomerName:\"תקין!\"});\r\n}\r\nsetCustomer({...customer, CustomerName: event.target.value })\r\n}\r\n\r\n//בדיקת תקינות של סיסמא\r\nconst validatePass=(event)=>\r\n{\r\n    \r\nvar passw = /^[A-Za-z]\\w{7,14}$/;\r\nif (event.target.value.match(passw)) {\r\n  setErrors({...errors, pass: \"תקין!\"} );\r\n}\r\nelse {\r\n  setErrors({...errors, pass: 'Wrong...!! password password between 7 to 16 characters which contain only characters, numeric digits, underscore and first character must be a letter' })\r\n}\r\nsetCustomer({...customer, CustomerPassword: event.target.value })\r\n}\r\n\r\nreturn (\r\n<MDBContainer>\r\n  <MDBRow>\r\n    <MDBCol md=\"6\">\r\n      <form>\r\n        <p className=\"h4 text-center mb-4\">Sign up</p>\r\n        <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\">\r\n          Your name\r\n        </label>\r\n        <input type=\"text\" id=\"i1\" value={customer.CustomerName} onChange={(e)=>{validateName(e)}} className=\"form-control\" />\r\n        <p > {errors.CustomerName}</p>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisteridEx\" className=\"grey-text\">\r\n          Your id\r\n        </label>\r\n        <input type=\"text\" id=\"i2\" value={customer.CustomerId} className=\"form-control\" />\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegistercreaditCardEx\" className=\"grey-text\">\r\n          Your creaditCard\r\n        </label>\r\n        <input type=\"text\" id=\"i3\" value={customer.CustomerCreditcard} className=\"form-control\" />\r\n        <p > {errors.CustomerPassword}</p>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisterPasswordEx\" className=\"grey-text\">\r\n          Your password\r\n        </label>\r\n        <input type=\"password\" id=\"i4\" value={customer.CustomerPassword} onChange={(e)=>{validatePass(e)}} className=\"form-control\" />\r\n        <div className=\"text-center mt-4\">\r\n          <MDBBtn color=\"deep-orange\" className=\"mb-3\" type=\"submit\" onClick={() => newCustomer(dispatch)}>\r\n          Register\r\n                </MDBBtn>\r\n        </div>\r\n      </form>\r\n    </MDBCol>\r\n  </MDBRow>\r\n</MDBContainer>\r\n);\r\n};\r\n\r\nexport default FormPage;"]},"metadata":{},"sourceType":"module"}