{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05D9\\u05E8\\u05D0\\u05EA \\u05E2\\u05DE\\u05E8\\u05DD\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD \\u05E9\\u05E0\\u05D4 \\u05D1\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D7\\u05E0\\u05D5\\u05DB\\u05D4\\\\MDB 2 React\\\\src\\\\Comp\\\\CustomerUpdate.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { updateCustomer, getCustomerFromserverById } from '../Redux/Customer/CustomersThunk';\nimport { useParams } from \"react-router\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerUpdate = code => {\n  _s();\n\n  const C = useSelector(store => {\n    return store.customers.customer;\n  });\n  const dispatch = useDispatch(); // let c=code.match.params.id;\n\n  let [c2, setC2] = useState({});\n  useEffect(async () => {\n    let c1 = await getCustomerFromserverById(dispatch, C.IdCustomer);\n    alert(c1);\n    console.log(c1);\n    setC2(c1);\n  }, []);\n\n  const newCustomer = async dispatch => {\n    let IdCustomer = document.getElementById(\"c1\").value;\n    let NameCustomer = document.getElementById(\"c2\").value;\n    let PasswordCustomer = document.getElementById(\"c3\").value;\n    let CreditcardCustomer = document.getElementById(\"c4\").value;\n\n    if (IdCustomer) {\n      const customer = await updateCustomer(dispatch, IdCustomer, NameCustomer, PasswordCustomer, CreditcardCustomer);\n      console.log(customer);\n      alert(\"הפרטים עודכן בהצלחה\");\n      return customer;\n    } else {\n      alert(\"אחד מהפרטים אינו נכון אנא מלא בשנית\");\n    }\n  };\n\n  const up = e => {\n    setP(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h4 text-center mb-4\",\n            children: \"\\u05E2\\u05D3\\u05DB\\u05D5\\u05DF \\u05DC\\u05E7\\u05D5\\u05D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegisterNameEx\",\n            className: \"grey-text\",\n            children: \"Customer id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"c1\",\n            value: c2.IdCustomer,\n            className: \"form-control\",\n            name: \"c11\",\n            onChange: e => up(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegisteridEx\",\n            className: \"grey-text\",\n            children: \"Customer name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"c2\",\n            value: c2.nameCustomer,\n            className: \"form-control\",\n            name: \"c22\",\n            onChange: e => up(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegistercreaditCardEx\",\n            className: \"grey-text\",\n            children: \"Customer password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"c3\",\n            value: c2.PasswordCustomer,\n            className: \"form-control\",\n            name: \"c33\",\n            onChange: e => up(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormRegisterPasswordEx\",\n            className: \"grey-text\",\n            children: \"Customer Creditcard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"c4\",\n            value: c2.CreditcardCustomer,\n            className: \"form-control\",\n            name: \"c44\",\n            onChange: e => up(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            color: \"deep-orange\",\n            className: \"mb-3\",\n            type: \"submit\",\n            onClick: () => newCustomer(dispatch),\n            children: \"\\u05E2\\u05D3\\u05DB\\u05D5\\u05DF \\u05DC\\u05E7\\u05D5\\u05D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CustomerUpdate, \"RwNhNvOwvVMjhmIYl5Qx2ph3t3c=\", true, function () {\n  return [useDispatch];\n});\n\n_c = CustomerUpdate;\nexport default CustomerUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerUpdate\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/לימודים שנה ב/react/פרוייקט חנוכה/MDB 2 React/src/Comp/CustomerUpdate.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","useState","useDispatch","updateCustomer","getCustomerFromserverById","useParams","useEffect","CustomerUpdate","code","C","useSelector","store","customers","customer","dispatch","c2","setC2","c1","IdCustomer","alert","console","log","newCustomer","document","getElementById","value","NameCustomer","PasswordCustomer","CreditcardCustomer","up","e","setP","target","nameCustomer"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\n import  {useState} from 'react';\r\n import { useDispatch } from \"react-redux\";\r\nimport {updateCustomer,getCustomerFromserverById} from '../Redux/Customer/CustomersThunk'\r\n import { useParams } from \"react-router\";\r\n import { useEffect } from \"react\";\r\n\r\nconst CustomerUpdate = (code) => {\r\n    const C = useSelector((store) => {return store.customers.customer });\r\n    const dispatch=useDispatch();\r\n   // let c=code.match.params.id;\r\n    \r\n    let [c2,setC2]=useState({});\r\n\r\n   useEffect(async () => {\r\n    let c1=await getCustomerFromserverById(dispatch,C.IdCustomer); \r\n    alert(c1);\r\n    console.log(c1)\r\n    setC2(c1);\r\n   }, [])\r\n\r\n\r\n\r\n   \r\n   const newCustomer=async(dispatch)=>{\r\n    \r\n    let IdCustomer=document.getElementById(\"c1\").value\r\n    let NameCustomer=document.getElementById(\"c2\").value\r\n    let PasswordCustomer=document.getElementById(\"c3\").value\r\n    let CreditcardCustomer=document.getElementById(\"c4\").value\r\n  \r\n    \r\n   if(IdCustomer)\r\n   {\r\n   \r\n    \r\n    const customer=await updateCustomer(dispatch,IdCustomer,NameCustomer ,PasswordCustomer,CreditcardCustomer);\r\n    console.log(customer)\r\n    alert(\"הפרטים עודכן בהצלחה\");\r\n     return customer\r\n   }\r\n   else\r\n   {\r\n  \r\n    alert(\"אחד מהפרטים אינו נכון אנא מלא בשנית\")\r\n    \r\n  }\r\n  \r\n\r\n  }\r\nconst up=(e)=>{\r\n    setP(e.target.value)\r\n}\r\nreturn (\r\n<MDBContainer>\r\n  <MDBRow>\r\n    <MDBCol md=\"6\">\r\n      <form>\r\n        <p className=\"h4 text-center mb-4\">עדכון לקוח</p>\r\n        <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\" >\r\n          Customer id\r\n        </label>\r\n        <input type=\"text\" id=\"c1\" value={c2.IdCustomer}  className=\"form-control\" name= \"c11\" onChange={(e)=>up(e)} />\r\n    \r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisteridEx\" className=\"grey-text\">\r\n        Customer name\r\n        </label>\r\n        <input type=\"text\" id=\"c2\" value={c2.nameCustomer} className=\"form-control\" name= \"c22\" onChange={(e)=>up(e)}/>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegistercreaditCardEx\" className=\"grey-text\">\r\n        Customer password\r\n        </label>\r\n        <input type=\"text\" id=\"c3\" value={c2.PasswordCustomer} className=\"form-control\" name= \"c33\" onChange={(e)=>up(e)}/>\r\n        <br />\r\n        <label htmlFor=\"defaultFormRegisterPasswordEx\" className=\"grey-text\">\r\n        Customer Creditcard\r\n        </label>\r\n        <input type=\"text\" id=\"c4\" value={c2.CreditcardCustomer} className=\"form-control\" name= \"c44\" onChange={(e)=>up(e)}/>\r\n        <div className=\"text-center mt-4\"></div>\r\n        <br />\r\n        \r\n        <br />\r\n        \r\n        \r\n          <MDBBtn color=\"deep-orange\" className=\"mb-3\" type=\"submit\" onClick={() => newCustomer(dispatch)}>\r\n          עדכון לקוח\r\n                </MDBBtn>\r\n        \r\n      </form>\r\n    </MDBCol>\r\n  </MDBRow>\r\n</MDBContainer>\r\n);\r\n};\r\n\r\nexport default CustomerUpdate;"]},"metadata":{},"sourceType":"module"}