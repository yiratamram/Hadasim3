{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05D9\\u05E8\\u05D0\\u05EA \\u05E2\\u05DE\\u05E8\\u05DD\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD \\u05E9\\u05E0\\u05D4 \\u05D1\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D7\\u05E0\\u05D5\\u05DB\\u05D4\\\\MDB 2 React\\\\src\\\\Comp\\\\showProducts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { getAllProductsFromServer, getProductById, addProduct, updateProduct, removeProduct, getByCategorie } from '../Redux/Product/ProductsThunk';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBIcon } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowProducts() {\n  _s();\n\n  let myProductsFromServer;\n  let myProduct, myUpdateProduct, myAddProduct, myRemoveProduct, myProductOfCategory;\n  const [productList1, setProductList] = useState([]);\n  const [OneProduct, setOneProduct] = useState({});\n  const [productsInThisCategorie, setproductsInThisCategorie] = useState([]);\n  const dispatch = useDispatch();\n  let allProd = useSelector(store => {\n    console.log(store.products.products);\n    debugger;\n    return store.products.products;\n  });\n  useEffect(async () => {\n    debugger;\n    let okServer = await getAllProductsFromServer(dispatch); //  await console.log(myProductsFromServer1)\n  }, []); // setOneProduct(myProductsFromServer);\n  // console.log(\"productList\")\n  // console.log(OneProduct)\n  // console.log(\"productList1\")\n  // console.log(productList1)\n  //  myProduct = await getProductById(dispatch, 1);\n  //  await console.log(myProduct);\n  //  await setOneProduct(myProduct);\n  //  myUpdateProduct = await updateProduct(dispatch, \"146\", \",,,\", \"1\", \"100\", \"ggg\", 20, 50);\n  //  await console.log(\"עדכון מוצר \" + myUpdateProduct);\n  //  await setProductList(myUpdateProduct);\n  //  myAddProduct = await addProduct(dispatch, \"146\", \",,,\", \"1\", \"300\", \"PPPP\", 30, 50);\n  //  await console.log(\"הוספת מוצר  \" + myAddProduct);\n  //  await setProductList(myAddProduct);\n  //  myRemoveProduct = await removeProduct(dispatch, 2);\n  //  await console.log(\"הסרת מוצר \" + myRemoveProduct);\n  //  await setProductList(myRemoveProduct);\n  //  myProductOfCategory = await getByCategorie(dispatch, 1);\n  //  await console.log(\"מוצרים לפי קטגוריה \" + myProductOfCategory);\n  //  await setproductsInThisCategorie(myProductOfCategory);\n  // }, [])\n\n  console.log(\"productList1\");\n  console.log(productList1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05D5\\u05E6\\u05E8\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), productList1.map(x => {\n      /*#__PURE__*/\n      _jsxDEV(\"h1\", {\n        children: x.nameProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(ShowProducts, \"I8M1u9fBDrXp8KxBtWyQopvuHnw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ShowProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowProducts\");","map":{"version":3,"sources":["D:/יראת עמרם/שולחן העבודה/לימודים שנה ב/react/פרוייקט חנוכה/MDB 2 React/src/Comp/showProducts.js"],"names":["useEffect","getAllProductsFromServer","getProductById","addProduct","updateProduct","removeProduct","getByCategorie","useState","useDispatch","useSelector","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBRow","MDBCol","MDBIcon","ShowProducts","myProductsFromServer","myProduct","myUpdateProduct","myAddProduct","myRemoveProduct","myProductOfCategory","productList1","setProductList","OneProduct","setOneProduct","productsInThisCategorie","setproductsInThisCategorie","dispatch","allProd","store","console","log","products","okServer","map","x","nameProduct"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,wBAAT,EAAmCC,cAAnC,EAAmDC,UAAnD,EAA+DC,aAA/D,EAA8EC,aAA9E,EAA6FC,cAA7F,QAAmH,gCAAnH;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,YAA/B,EAA6CC,YAA7C,EAA2DC,WAA3D,EAAwEC,MAAxE,EAAgFC,MAAhF,EAAwFC,OAAxF,QAAuG,UAAvG;;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAErC,MAAIC,oBAAJ;AACA,MAAIC,SAAJ,EAAeC,eAAf,EAAgCC,YAAhC,EAA8CC,eAA9C,EAA+DC,mBAA/D;AACA,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiCnB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,uBAAD,EAA0BC,0BAA1B,IAAwDvB,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAMwB,QAAQ,GAAGvB,WAAW,EAA5B;AACA,MAAIwB,OAAO,GAAGvB,WAAW,CAAEwB,KAAD,IAAW;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeA,QAA3B;AACA;AACC,WAAOH,KAAK,CAACG,QAAN,CAAeA,QAAtB;AAAgC,GAHV,CAAzB;AAMApC,EAAAA,SAAS,CAAC,YAAY;AACpB;AACA,QAAIqC,QAAQ,GAAG,MAAMpC,wBAAwB,CAAC8B,QAAD,CAA7C,CAFoB,CAGpB;AAED,GALQ,EAKN,EALM,CAAT,CAdqC,CAoBrC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAEA,sBAAO;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,EAKJA,YAAY,CAACa,GAAb,CAAkBC,CAAD,IAAO;AAAE;AAAA;AAAA,kBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA;AAA0B,KAApD,CALI;AAAA,kBAAP;AA0DD;;GA9GuBtB,Y;UAOLV,W,EACHC,W;;;KARQS,Y","sourcesContent":["import { useEffect } from \"react\";\r\nimport { getAllProductsFromServer, getProductById, addProduct, updateProduct, removeProduct, getByCategorie } from '../Redux/Product/ProductsThunk'\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBIcon } from 'mdbreact';\r\n\r\nexport default function ShowProducts() {\r\n\r\n  let myProductsFromServer\r\n  let myProduct, myUpdateProduct, myAddProduct, myRemoveProduct, myProductOfCategory;\r\n  const [productList1, setProductList] = useState([]);\r\n  const [OneProduct, setOneProduct] = useState({})\r\n  const [productsInThisCategorie, setproductsInThisCategorie] = useState([])\r\n  const dispatch = useDispatch();\r\n  let allProd = useSelector((store) => {\r\n    console.log(store.products.products)\r\n    debugger\r\n     return store.products.products })\r\n\r\n\r\n  useEffect(async () => {\r\n    debugger;\r\n    let okServer = await getAllProductsFromServer(dispatch);\r\n    //  await console.log(myProductsFromServer1)\r\n\r\n  }, [])\r\n  // setOneProduct(myProductsFromServer);\r\n  // console.log(\"productList\")\r\n  // console.log(OneProduct)\r\n  // console.log(\"productList1\")\r\n  // console.log(productList1)\r\n\r\n  //  myProduct = await getProductById(dispatch, 1);\r\n  //  await console.log(myProduct);\r\n  //  await setOneProduct(myProduct);\r\n\r\n\r\n  //  myUpdateProduct = await updateProduct(dispatch, \"146\", \",,,\", \"1\", \"100\", \"ggg\", 20, 50);\r\n  //  await console.log(\"עדכון מוצר \" + myUpdateProduct);\r\n  //  await setProductList(myUpdateProduct);\r\n\r\n  //  myAddProduct = await addProduct(dispatch, \"146\", \",,,\", \"1\", \"300\", \"PPPP\", 30, 50);\r\n  //  await console.log(\"הוספת מוצר  \" + myAddProduct);\r\n  //  await setProductList(myAddProduct);\r\n\r\n\r\n  //  myRemoveProduct = await removeProduct(dispatch, 2);\r\n  //  await console.log(\"הסרת מוצר \" + myRemoveProduct);\r\n  //  await setProductList(myRemoveProduct);\r\n\r\n\r\n  //  myProductOfCategory = await getByCategorie(dispatch, 1);\r\n  //  await console.log(\"מוצרים לפי קטגוריה \" + myProductOfCategory);\r\n  //  await setproductsInThisCategorie(myProductOfCategory);\r\n  // }, [])\r\n  console.log(\"productList1\")\r\n  console.log(productList1)\r\n\r\n  return <>\r\n    <h2>מוצרים</h2>\r\n\r\n\r\n\r\n    {productList1.map((x) => { <h1>{x.nameProduct}</h1> })}\r\n    {/* {productList1.map((x)=>{\r\n  <div>\r\n    <img src={`http://localhost:10362/Images/${x.imageProduct}`}/>\r\n\r\n    <h1>{x.nameProduct}///</h1></div>}\r\n) */}\r\n\r\n    {/* }  */}\r\n    {/* {\r\n      productList != undefined ?\r\n        productList.length > 0 &&\r\n        productList.map((item) => {\r\n          console.log(item);\r\n          \r\n          console.log(productList);\r\n\r\n          <MDBRow>\r\n            <MDBCol md='4'>\r\n              <MDBCard>\r\n                <MDBCardImage\r\n                  top\r\n                  src='https://mdbcdn.b-cdn.net/img/Photos/Horizontal/Work/4-col/img%20%2821%29.jpg'\r\n                  overlay='white-slight'\r\n                  hover\r\n                  waves\r\n                  alt='MDBCard image cap'\r\n                />\r\n                <MDBCardBody className='elegant-color white-text rounded-bottom'>\r\n                  <a href='#!' className='activator waves-effect waves-light mr-4'>\r\n                    <MDBIcon icon='share-alt' className='white-text' />\r\n                  </a>\r\n                  <MDBCardTitle>{item.nameProduct}</MDBCardTitle>\r\n                  <hr className='hr-light' />\r\n                  <MDBCardText className='white-text'>\r\n                    Some quick example text to build on the card title and make up the\r\n                    bulk of the card&apos;s content.\r\n                  </MDBCardText>\r\n                  <a href='#!' className='black-text d-flex justify-content-end'>\r\n                    <h5 className='white-text'>\r\n                      Read more\r\n                      <MDBIcon icon='angle-double-right' className='ml-2' />\r\n                    </h5>\r\n                  </a>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        })\r\n        : <div>אין מוצרים</div>\r\n    } */}\r\n\r\n  </>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}