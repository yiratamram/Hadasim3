{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\HadasimProject\\\\HomeWorkHadasim3React\\\\src\\\\Components\\\\Chart.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer, MDBCard, MDBCardBody } from \"mdbreact\";\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { render } from \"react-dom\";\nimport { getCountWhoVaccinated } from '../Redux/Vaccinations/VaccinationsThunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartsPage1 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataLine: {\n        labels: [],\n        datasets: [{\n          label: \"חיסון ראשון\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }, {\n          label: \"חיסון שני\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }, {\n          label: \"חיסון שלישי\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"#FDB45C\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"#FDB45C\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }, {\n          label: \"חיסון רביעי\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"#FDB45C\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"#FDB45C\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }]\n      }\n    };\n  }\n\n  async componentDidMount() {\n    //  ; const c=this.props.match.params.code\n    const myData1 = await getCountWhoVaccinated(1);\n    this.state.dataLine.datasets[0].data = myData1;\n    const myData2 = await getCountWhoVaccinated(2);\n    this.state.dataLine.datasets[1].data = myData2;\n    const myData3 = await getCountWhoVaccinated(3);\n    this.state.dataLine.datasets[2].data = myData3;\n    const myData4 = await getCountWhoVaccinated(4);\n    this.state.dataLine.datasets[3].data = myData4;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MDBCard, {\n      style: {\n        opacity: \"0.7\",\n        margin: \"0 auto\"\n      },\n      className: \"col-8\",\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Line, {\n            class: \"myLine\",\n            data: this.state.dataLine,\n            options: {\n              responsive: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MDBCard, {\n            onc: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ChartsPage1;","map":{"version":3,"sources":["D:/Programing/HadasimProject/HomeWorkHadasim3React/src/Components/Chart.jsx"],"names":["React","useEffect","Line","MDBContainer","MDBCard","MDBCardBody","useState","useSelector","render","getCountWhoVaccinated","ChartsPage1","Component","state","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","componentDidMount","myData1","myData2","myData3","myData4","opacity","margin","responsive"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBContainer ,MDBCard,MDBCardBody} from \"mdbreact\";\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux'; \r\nimport { render } from \"react-dom\";\r\n\r\nimport {getCountWhoVaccinated} from '../Redux/Vaccinations/VaccinationsThunk'\r\n\r\n\r\nclass ChartsPage1 extends React.Component {\r\n\r\n  async componentDidMount() {\r\n      \r\n    //  ; const c=this.props.match.params.code\r\n      const myData1 = await getCountWhoVaccinated(1);\r\n      this.state.dataLine.datasets[0].data=myData1\r\n      const myData2 = await getCountWhoVaccinated(2);\r\n      this.state.dataLine.datasets[1].data=myData2\r\n      const myData3 = await getCountWhoVaccinated(3);\r\n      this.state.dataLine.datasets[2].data=myData3\r\n      const myData4 = await getCountWhoVaccinated(4);\r\n      this.state.dataLine.datasets[3].data=myData4\r\n      \r\n  }\r\n\r\n   \r\n  state = {\r\n    dataLine: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"חיסון ראשון\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(225, 204,230, .3)\",\r\n          borderColor: \"rgb(205, 130, 158)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(205, 130,1 58)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: []\r\n        },\r\n        {\r\n          label: \"חיסון שני\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n          borderColor: \"rgb(35, 26, 136)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(35, 26, 136)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data:[]\r\n        },{\r\n          label: \"חיסון שלישי\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n          borderColor: \"#FDB45C\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"#FDB45C\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data:[]\r\n        },{\r\n            label: \"חיסון רביעי\",\r\n            fill: true,\r\n            lineTension: 0.3,\r\n            backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n            borderColor: \"#FDB45C\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"#FDB45C\",\r\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n            pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data:[]\r\n          }\r\n      ]\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <MDBCard style={{opacity:\"0.7\", margin:\"0 auto\"}} className=\"col-8\">\r\n          \r\n        <MDBCardBody><MDBContainer>\r\n     \r\n      <Line class=\"myLine\"data={this.state.dataLine} options={{ responsive: true }} />\r\n      <MDBCard onc></MDBCard>\r\n    </MDBContainer></MDBCardBody></MDBCard>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsPage1;\r\n     \r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}