{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\HadasimProject\\\\HomeWorkHadasim3React\\\\src\\\\Components\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n// import { useState } from 'react';\n// import { useDispatch } from \"react-redux\";\n// import { addUser ,updateUser } from '../Redux/Users/UsersThunk'\n// import { MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n// import { useSelector } from \"react-redux\";\n// export default function SignUp (){\n//   debugger\n//   let User = useSelector((store) => {return store.Users.use }); \n//   debugger\n//   console.log(\"User\")\n//   // console.log(User.idUser)\n//   const [modal14, setModal14] = useState(true);\n//   const [errors, setErrors] = useState({IdUser: \"שדה חובה\", PrivateName: \"שדה חובה\",FamilyName: \"שדה חובה\",CityAdress: \"שדה חובה\", StreetAdress: \"שדה חובה\", NumberAdress: \"שדה חובה\",DateOfBirth: \"שדה חובה\",Phone: \"שדה חובה\",MobilePhone: \"שדה חובה\" });\n//   const [user, setUser] = useState({ idUser:\"\",privateName:\"\",familyName:\"\",cityAdress:\"\",streetAdress:\"\",numberAdress:\"\",dateOfBirth:\"\",numberAdress:\"\",phone:\"\",mobilePhone:\"\"});\n//   const dispatch = useDispatch();\n//   useEffect(async () =>{\n//   if(!User){\n//     User.IdUser=\"\";\n//     User.PrivateName=\"\";\n//     User.FamilyName=\"\";\n//     User.CityAdress=\"\";\n//     User.StreetAdress=\"\";\n//     User.NumberAdress=\"\";\n//     User.DateOfBirth=\"\";\n//     User.Phone=\"\";\n//     User.MobilePhone=\"\";\n//   }\n//   setUser(User);\n//   },[])\n//   const newUser = async () => {\n//      debugger\n//      let PrivateName = document.getElementById(\"PrivateName\").value\n//      let FamilyName = document.getElementById(\"FamilyName\").value\n//      let CityAdress = document.getElementById(\"CityAdress\").value\n//      let StreetAdress = document.getElementById(\"StreetAdress\").value\n//      let NumberAdress = document.getElementById(\"NumberAdress\").value\n//      let DateOfBirth = document.getElementById(\"DateOfBirth\").value\n//      let Phone = document.getElementById(\"Phone\").value\n//      let MobilePhone = document.getElementById(\"MobilePhone\").value\n//     if(User.idUser){\n//     if (PrivateName&&FamilyName&&CityAdress&&StreetAdress&&NumberAdress&&DateOfBirth&&Phone&&MobilePhone){\n//       let User=null;\n//       let ProfileCalculations=null;\n//       const user=await updateUser(dispatch,User.idUser,FamilyName,CityAdress,StreetAdress,NumberAdress,DateOfBirth,Phone,MobilePhone) \n//       if(user)\n//       alert(\"הפרטים עודכנו בהצלחה\");\n//       setModal14(!modal14);\n//       }\n//       else{\n//         alert(\"הפרטים לא עודכנו אנא וודא שהשדות לא ריקים  ותקינים\")\n//       }\n//     }\n//     ////\n//     else{\n//       if(errors.erroruserName1===\"\"&&errors.errorEmail1===\"\"&&errors.errorEmail2===\"\"&&errors.erroruserName===\"\"&&errors.pass1===\"\"&&errors.pass2===\"\"){\n//      if (PrivateName&&FamilyName&&CityAdress&&StreetAdress&&NumberAdress&&DateOfBirth&&Phone&&MobilePhone) {\n//       const user = await addUser(dispatch,PrivateName,FamilyName,CityAdress,StreetAdress,NumberAdress,DateOfBirth,Phone,MobilePhone);\n//       alert(\"ברוך הבא \" + PrivateName + \" לאתרינו מקווים שתהיה לך את חווית הגלישה הטובה\");\n//       setModal14(!modal14);\n//       return user\n//      }}\n//     else {\n//       alert(\"אנא מלא את כל השדות ובדוק שכולם תקינים\");\n//     }}\n//   }\n//   const validEmail1 = (event) => {\n//     var myemail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n//     if (!event.target.value)\n//       setErrors({ ...errors, errorEmail1: 'שדה חובה*' })\n//     else if (event.target.value.match(myemail)) { setErrors({ ...errors, errorEmail1: \"\" }) }\n//     else if(!event.target.value.match(myemail)){\n//       setErrors({ ...errors, errorEmail1: \"אימייל לא תקין\" })\n//     }\n//     setCompany({ ...company, privateEmail: event.target.value })\n//   }\n//   const validEmail2 = (event) => {\n//     var myemail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n//     if (!event.target.value)\n//       setErrors({ ...errors, errorEmail2: 'שדה חובה*' })\n//     else if (event.target.value.match(myemail)) { setErrors({ ...errors, errorEmail2: \"\" }) }\n//     else if (!event.target.value.match(myemail)) {\n//       setErrors({ ...errors, errorEmail2: \"אימייל לא תקין\" })\n//     }\n//     setCompany({ ...company, customerServiceEmail: event.target.value })\n//   }\n//   //בדיקת תקינות של שם\n//   const validateName = (event) => {\n//     let pattern=\"^(?=[a-zA-Z0-9א-ת ]{4,10}$)(?!.*[_.]{2})[^_.].*[^_.]$\";\n//       if (!event.target.value)\n//         setErrors({ ...errors, erroruserName: \"שדה חובה*\" });\n//       else if (!event.target.value.match(pattern)) \n//         setErrors({ ...errors, erroruserName: \"האורך חייב להיות בין 4 ל10 תווים אין להשתמש ב_ או . \" });\n//       else  if (event.target.value.match(pattern)){\n//         setErrors({ ...errors, erroruserName: \"\" });\n//       }\n//       setCompany({ ...company, userName:event.target.value})\n//     }\n//     const validateName1 = (event) => {\n//       let pattern=\"(?=[a-zA-Z0-9א-ת ]{2,9}$)\";\n//         if (!event.target.value)\n//           setErrors({ ...errors, erroruserName1: \"שדה חובה*\" });\n//         else if (!event.target.value.match(pattern)) \n//           setErrors({ ...errors, erroruserName1: \"לא יכול להכיל רק תו אחד \" });\n//         else  if (event.target.value.match(pattern)){\n//           setErrors({ ...errors, erroruserName1: \"\" });\n//         }\n//         setCompany({ ...company, nameCompany:event.target.value})\n//       }\n//   //בדיקת תקינות של סיסמא\n//   const validatePass1 = (event) => {\n//     var passw = /^[A-Za-z]\\w{5,20}$/;\n//     if (!event.target.value)\n//     setErrors({ ...errors, pass1: 'שדה חובה*' })\n//     else if(!event.target.value.match(passw)) \n//       setErrors({ ...errors, pass1: 'סיסמא צריכה להיות בין 5 ל 20 תווים . מכילה רק מספרים ואותיות. אות באנגלית חובה בהתחלה  ' })\n//    else if (event.target.value.match(passw)) \n//       setErrors({ ...errors, pass1: \"\" });\n//     setCompany({ ...company, customerServiceEmailPassword: event.target.value })\n//   }\n//   const validatePass2 = (event) => {\n//     var passw = /^[A-Za-z]\\w{5,20}$/;\n//     if (!event.target.value)\n//     setErrors({ ...errors, pass2: 'שדה חובה*' })\n//     else if (event.target.value.match(passw)) {\n//       setErrors({ ...errors, pass2: \"\" });\n//     }\n//     else if((!event.target.value.match(passw))) {\n//       setErrors({ ...errors, pass2: 'סיסמא צריכה להיות בין 5 ל 20 תווים . מכילה רק מספרים ואותיות באנגלית אות חובה בהתחלה ' })\n//     }\n//     setCompany({ ...company, userPassword: event.target.value })\n//   }\n//   const up=(event)=>{\n//     if (!event.target.value)\n//     setErrors({ ...errors, nameCompany1: 'שדה חובה*' })\n//    else setCompany(event.target.value)\n//   }\n//   return (\n//     <>\n//       <MDBContainer>\n//         <MDBModal isOpen={modal14} toggle={() => { setModal14(!modal14) }} centered>\n//           <MDBModalHeader toggle={() => { setModal14(!modal14); }}>\n//             {\n//               // User.idUser?\n//               <>\n//             טופס עדכון   \n//               </>\n//               // :<>טופס הרשמה </>\n//             }\n//             </MDBModalHeader>\n//           <MDBModalBody>\n//             <MDBContainer>\n//               <MDBRow>\n//                 <MDBCol md=\"6\">\n//                   <form>\n//                     <div className=\"grey-text\">\n//                       <label>שם פרטי</label>\n//                       <MDBInput  id=\"PrivateName\" value={user.privateName} onChange={(e) => { validateName1(e) }} icon=\"user\" group type=\"text\" validate error=\"wrong\"\n//                         success=\"right\" />\n//                         {/* <p style={{color:\"red\"}}>{errors.erroruserName1} </p> */}\n//                         <label>שם משפחה</label>\n//                       <MDBInput  id=\"FamilyName\" value={user.familyName} onChange={(e) => { validEmail1(e) }} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\n//                         success=\"right\"  /> \n//                         {/* <p style={{color:\"red\"}}>{errors.errorEmail1}</p> */}\n//                          <label>עיר</label>\n//                       <MDBInput id=\"CityAdress\" value={user.cityAdress} onChange={(e) => { validEmail2(e) }} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\n//                         success=\"right\" />\n//                         {/* <p style={{color:\"red\"}}>{errors.errorEmail2}</p> */}\n//                         <label>רחוב</label>\n//                         <div  className=\"cm\">\n//                       <MDBInput id=\"StreetAdress\" value={user.streetAdress} onChange={(e) => { validatePass1(e) }} icon=\"lock\" group type=\"text\" validate />\n//                      {/* <p style={{color:\"red\"}}>{errors.pass1} </p> */}\n//                       <label>מספר דירה</label>\n//                       <MDBInput  id=\"NumberAdress\" value={user.numberAdress} onChange={(e) => { validateName(e) }} icon=\"user\" group type=\"text\" validate error=\"wrong\" success=\"right\" />\n//                       {/* <p style={{color:\"red\"}}>{errors.erroruserName}</p> */}\n//                       <label>תאריך לידה </label>\n//                       <MDBInput  id=\"DateOfBirth\" value={user.dateOfBirth} onChange={(e) => { validatePass2(e) }} icon=\"lock\" group type=\"text\" validate  />\n//                       {/* <p style={{color:\"red\"}}>{errors.pass2}</p> */}\n//                     <label> טלפון </label>\n//                       <MDBInput  id=\"Phone\" value={user.phone} onChange={(e) => { validatePass2(e) }} icon=\"lock\" group type=\"text\" validate  />\n//                       {/* <p style={{color:\"red\"}}>{errors.pass2}</p> */}\n//                     <label>פלאפון נייד  </label>\n//                       <MDBInput  id=\"MobilePhone\" value={user.mobilePhone} onChange={(e) => { validatePass2(e) }} icon=\"lock\" group type=\"text\" validate  />\n//                       {/* <p style={{color:\"red\"}}>{errors.pass2}</p> */}\n//                     <div className=\"text-center\">\n//                     </div>\n//                     </div>\n//                     </div>\n//                   </form>\n//                 </MDBCol>\n//               </MDBRow>\n//             </MDBContainer>\n//           </MDBModalBody>\n//           <MDBModalFooter>\n//             {\n//               // Company.codeCompany?\n//             <MDBBtn color=\"secondary\" onClick={() => newUser()}>עדכן</MDBBtn>\n//             // :<MDBBtn color=\"secondary\" onClick={() => newUser()}>הרשם</MDBBtn>\n// }\n//           </MDBModalFooter>\n//         </MDBModal>\n//       </MDBContainer>\n//     </>\n//   );\n// }\nimport { MDBBtn, MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBModalBody, MDBModalFooter } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [basicModal, setBasicModal] = useState(false);\n\n  const toggleShow = () => setBasicModal(!basicModal);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n      onClick: toggleShow,\n      children: \"LAUNCH DEMO MODAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBModal, {\n      show: basicModal,\n      setShow: setBasicModal,\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(MDBModalDialog, {\n        children: /*#__PURE__*/_jsxDEV(MDBModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(MDBModalTitle, {\n              children: \"Modal title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"btn-close\",\n              color: \"none\",\n              onClick: toggleShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n            children: \"Modal body text goes here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"secondary\",\n              onClick: toggleShow,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"VXD3hrwBgl5CLu65y2T0QXDUbME=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Programing/HadasimProject/HomeWorkHadasim3React/src/Components/SignUp.jsx"],"names":["MDBBtn","MDBModal","MDBModalDialog","MDBModalContent","MDBModalHeader","MDBModalTitle","MDBModalBody","MDBModalFooter","App","basicModal","setBasicModal","useState","toggleShow"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SACEA,MADF,EAEEC,QAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,cARF,QASO,kBATP;;;AAWA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMC,UAAU,GAAG,MAAMF,aAAa,CAAC,CAACD,UAAF,CAAtC;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEH,UAAhB;AAA4B,MAAA,OAAO,EAAEC,aAArC;AAAoD,MAAA,QAAQ,EAAC,IAA7D;AAAA,6BACE,QAAC,cAAD;AAAA,+BACE,QAAC,eAAD;AAAA,kCACE,QAAC,cAAD;AAAA,oCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,WAAlB;AAA8B,cAAA,KAAK,EAAC,MAApC;AAA2C,cAAA,OAAO,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAOE,QAAC,cAAD;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,WAAd;AAA0B,cAAA,OAAO,EAAEA,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAuBD;;GA5BuBJ,G;;KAAAA,G","sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\n// import { useState } from 'react';\r\n// import { useDispatch } from \"react-redux\";\r\n// import { addUser ,updateUser } from '../Redux/Users/UsersThunk'\r\n// import { MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n// import { useSelector } from \"react-redux\";\r\n\r\n\r\n// export default function SignUp (){\r\n//   debugger\r\n//   let User = useSelector((store) => {return store.Users.use }); \r\n//   debugger\r\n//   console.log(\"User\")\r\n//   // console.log(User.idUser)\r\n//   const [modal14, setModal14] = useState(true);\r\n//   const [errors, setErrors] = useState({IdUser: \"שדה חובה\", PrivateName: \"שדה חובה\",FamilyName: \"שדה חובה\",CityAdress: \"שדה חובה\", StreetAdress: \"שדה חובה\", NumberAdress: \"שדה חובה\",DateOfBirth: \"שדה חובה\",Phone: \"שדה חובה\",MobilePhone: \"שדה חובה\" });\r\n//   const [user, setUser] = useState({ idUser:\"\",privateName:\"\",familyName:\"\",cityAdress:\"\",streetAdress:\"\",numberAdress:\"\",dateOfBirth:\"\",numberAdress:\"\",phone:\"\",mobilePhone:\"\"});\r\n//   const dispatch = useDispatch();\r\n\r\n  \r\n//   useEffect(async () =>{\r\n//   if(!User){\r\n//     User.IdUser=\"\";\r\n//     User.PrivateName=\"\";\r\n//     User.FamilyName=\"\";\r\n//     User.CityAdress=\"\";\r\n//     User.StreetAdress=\"\";\r\n//     User.NumberAdress=\"\";\r\n//     User.DateOfBirth=\"\";\r\n//     User.Phone=\"\";\r\n//     User.MobilePhone=\"\";\r\n//   }\r\n//   setUser(User);\r\n//   },[])\r\n\r\n//   const newUser = async () => {\r\n//      debugger\r\n//      let PrivateName = document.getElementById(\"PrivateName\").value\r\n//      let FamilyName = document.getElementById(\"FamilyName\").value\r\n//      let CityAdress = document.getElementById(\"CityAdress\").value\r\n//      let StreetAdress = document.getElementById(\"StreetAdress\").value\r\n//      let NumberAdress = document.getElementById(\"NumberAdress\").value\r\n//      let DateOfBirth = document.getElementById(\"DateOfBirth\").value\r\n//      let Phone = document.getElementById(\"Phone\").value\r\n//      let MobilePhone = document.getElementById(\"MobilePhone\").value\r\n\r\n     \r\n//     if(User.idUser){\r\n    \r\n//     if (PrivateName&&FamilyName&&CityAdress&&StreetAdress&&NumberAdress&&DateOfBirth&&Phone&&MobilePhone){\r\n//       let User=null;\r\n//       let ProfileCalculations=null;\r\n//       const user=await updateUser(dispatch,User.idUser,FamilyName,CityAdress,StreetAdress,NumberAdress,DateOfBirth,Phone,MobilePhone) \r\n//       if(user)\r\n//       alert(\"הפרטים עודכנו בהצלחה\");\r\n//       setModal14(!modal14);\r\n    \r\n//       }\r\n//       else{\r\n//         alert(\"הפרטים לא עודכנו אנא וודא שהשדות לא ריקים  ותקינים\")\r\n//       }\r\n//     }\r\n//     ////\r\n//     else{\r\n//       if(errors.erroruserName1===\"\"&&errors.errorEmail1===\"\"&&errors.errorEmail2===\"\"&&errors.erroruserName===\"\"&&errors.pass1===\"\"&&errors.pass2===\"\"){\r\n//      if (PrivateName&&FamilyName&&CityAdress&&StreetAdress&&NumberAdress&&DateOfBirth&&Phone&&MobilePhone) {\r\n//       const user = await addUser(dispatch,PrivateName,FamilyName,CityAdress,StreetAdress,NumberAdress,DateOfBirth,Phone,MobilePhone);\r\n//       alert(\"ברוך הבא \" + PrivateName + \" לאתרינו מקווים שתהיה לך את חווית הגלישה הטובה\");\r\n//       setModal14(!modal14);\r\n//       return user\r\n//      }}\r\n      \r\n//     else {\r\n\r\n//       alert(\"אנא מלא את כל השדות ובדוק שכולם תקינים\");\r\n\r\n//     }}\r\n//   }\r\n\r\n//   const validEmail1 = (event) => {\r\n//     var myemail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n//     if (!event.target.value)\r\n//       setErrors({ ...errors, errorEmail1: 'שדה חובה*' })\r\n//     else if (event.target.value.match(myemail)) { setErrors({ ...errors, errorEmail1: \"\" }) }\r\n//     else if(!event.target.value.match(myemail)){\r\n//       setErrors({ ...errors, errorEmail1: \"אימייל לא תקין\" })\r\n//     }\r\n//     setCompany({ ...company, privateEmail: event.target.value })\r\n//   }\r\n  \r\n\r\n//   const validEmail2 = (event) => {\r\n//     var myemail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n//     if (!event.target.value)\r\n//       setErrors({ ...errors, errorEmail2: 'שדה חובה*' })\r\n//     else if (event.target.value.match(myemail)) { setErrors({ ...errors, errorEmail2: \"\" }) }\r\n//     else if (!event.target.value.match(myemail)) {\r\n//       setErrors({ ...errors, errorEmail2: \"אימייל לא תקין\" })\r\n//     }\r\n//     setCompany({ ...company, customerServiceEmail: event.target.value })\r\n//   }\r\n\r\n\r\n\r\n//   //בדיקת תקינות של שם\r\n//   const validateName = (event) => {\r\n//     let pattern=\"^(?=[a-zA-Z0-9א-ת ]{4,10}$)(?!.*[_.]{2})[^_.].*[^_.]$\";\r\n\r\n    \r\n//       if (!event.target.value)\r\n//         setErrors({ ...errors, erroruserName: \"שדה חובה*\" });\r\n//       else if (!event.target.value.match(pattern)) \r\n//         setErrors({ ...errors, erroruserName: \"האורך חייב להיות בין 4 ל10 תווים אין להשתמש ב_ או . \" });\r\n//       else  if (event.target.value.match(pattern)){\r\n//         setErrors({ ...errors, erroruserName: \"\" });\r\n      \r\n        \r\n\r\n//       }\r\n//       setCompany({ ...company, userName:event.target.value})\r\n    \r\n//     }\r\n    \r\n//     const validateName1 = (event) => {\r\n//       let pattern=\"(?=[a-zA-Z0-9א-ת ]{2,9}$)\";\r\n  \r\n      \r\n//         if (!event.target.value)\r\n//           setErrors({ ...errors, erroruserName1: \"שדה חובה*\" });\r\n//         else if (!event.target.value.match(pattern)) \r\n//           setErrors({ ...errors, erroruserName1: \"לא יכול להכיל רק תו אחד \" });\r\n//         else  if (event.target.value.match(pattern)){\r\n//           setErrors({ ...errors, erroruserName1: \"\" });\r\n  \r\n//         }\r\n//         setCompany({ ...company, nameCompany:event.target.value})\r\n      \r\n//       }\r\n      \r\n//   //בדיקת תקינות של סיסמא\r\n//   const validatePass1 = (event) => {\r\n\r\n//     var passw = /^[A-Za-z]\\w{5,20}$/;\r\n//     if (!event.target.value)\r\n//     setErrors({ ...errors, pass1: 'שדה חובה*' })\r\n//     else if(!event.target.value.match(passw)) \r\n//       setErrors({ ...errors, pass1: 'סיסמא צריכה להיות בין 5 ל 20 תווים . מכילה רק מספרים ואותיות. אות באנגלית חובה בהתחלה  ' })\r\n    \r\n//    else if (event.target.value.match(passw)) \r\n//       setErrors({ ...errors, pass1: \"\" });\r\n    \r\n    \r\n//     setCompany({ ...company, customerServiceEmailPassword: event.target.value })\r\n//   }\r\n\r\n//   const validatePass2 = (event) => {\r\n\r\n//     var passw = /^[A-Za-z]\\w{5,20}$/;\r\n//     if (!event.target.value)\r\n//     setErrors({ ...errors, pass2: 'שדה חובה*' })\r\n//     else if (event.target.value.match(passw)) {\r\n//       setErrors({ ...errors, pass2: \"\" });\r\n//     }\r\n\r\n//     else if((!event.target.value.match(passw))) {\r\n//       setErrors({ ...errors, pass2: 'סיסמא צריכה להיות בין 5 ל 20 תווים . מכילה רק מספרים ואותיות באנגלית אות חובה בהתחלה ' })\r\n//     }\r\n//     setCompany({ ...company, userPassword: event.target.value })\r\n//   }\r\n\r\n//   const up=(event)=>{\r\n//     if (!event.target.value)\r\n//     setErrors({ ...errors, nameCompany1: 'שדה חובה*' })\r\n//    else setCompany(event.target.value)\r\n//   }\r\n   \r\n  \r\n//   return (\r\n//     <>\r\n      \r\n//       <MDBContainer>\r\n//         <MDBModal isOpen={modal14} toggle={() => { setModal14(!modal14) }} centered>\r\n          \r\n//           <MDBModalHeader toggle={() => { setModal14(!modal14); }}>\r\n//             {\r\n//               // User.idUser?\r\n//               <>\r\n//             טופס עדכון   \r\n//               </>\r\n//               // :<>טופס הרשמה </>\r\n//             }\r\n//             </MDBModalHeader>\r\n//           <MDBModalBody>\r\n//             <MDBContainer>\r\n//               <MDBRow>\r\n//                 <MDBCol md=\"6\">\r\n//                   <form>\r\n\r\n//                     <div className=\"grey-text\">\r\n//                       <label>שם פרטי</label>\r\n//                       <MDBInput  id=\"PrivateName\" value={user.privateName} onChange={(e) => { validateName1(e) }} icon=\"user\" group type=\"text\" validate error=\"wrong\"\r\n//                         success=\"right\" />\r\n//                         {/* <p style={{color:\"red\"}}>{errors.erroruserName1} </p> */}\r\n//                         <label>שם משפחה</label>\r\n//                       <MDBInput  id=\"FamilyName\" value={user.familyName} onChange={(e) => { validEmail1(e) }} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n//                         success=\"right\"  /> \r\n//                         {/* <p style={{color:\"red\"}}>{errors.errorEmail1}</p> */}\r\n//                          <label>עיר</label>\r\n           \r\n//                       <MDBInput id=\"CityAdress\" value={user.cityAdress} onChange={(e) => { validEmail2(e) }} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n//                         success=\"right\" />\r\n//                         {/* <p style={{color:\"red\"}}>{errors.errorEmail2}</p> */}\r\n                    \r\n//                         <label>רחוב</label>\r\n//                         <div  className=\"cm\">\r\n//                       <MDBInput id=\"StreetAdress\" value={user.streetAdress} onChange={(e) => { validatePass1(e) }} icon=\"lock\" group type=\"text\" validate />\r\n//                      {/* <p style={{color:\"red\"}}>{errors.pass1} </p> */}\r\n                     \r\n//                       <label>מספר דירה</label>\r\n//                       <MDBInput  id=\"NumberAdress\" value={user.numberAdress} onChange={(e) => { validateName(e) }} icon=\"user\" group type=\"text\" validate error=\"wrong\" success=\"right\" />\r\n//                       {/* <p style={{color:\"red\"}}>{errors.erroruserName}</p> */}\r\n//                       <label>תאריך לידה </label>\r\n//                       <MDBInput  id=\"DateOfBirth\" value={user.dateOfBirth} onChange={(e) => { validatePass2(e) }} icon=\"lock\" group type=\"text\" validate  />\r\n//                       {/* <p style={{color:\"red\"}}>{errors.pass2}</p> */}\r\n                    \r\n//                     <label> טלפון </label>\r\n//                       <MDBInput  id=\"Phone\" value={user.phone} onChange={(e) => { validatePass2(e) }} icon=\"lock\" group type=\"text\" validate  />\r\n//                       {/* <p style={{color:\"red\"}}>{errors.pass2}</p> */}\r\n//                     <label>פלאפון נייד  </label>\r\n//                       <MDBInput  id=\"MobilePhone\" value={user.mobilePhone} onChange={(e) => { validatePass2(e) }} icon=\"lock\" group type=\"text\" validate  />\r\n//                       {/* <p style={{color:\"red\"}}>{errors.pass2}</p> */}\r\n//                     <div className=\"text-center\">\r\n//                     </div>\r\n//                     </div>\r\n//                     </div>\r\n//                   </form>\r\n//                 </MDBCol>\r\n//               </MDBRow>\r\n//             </MDBContainer>\r\n//           </MDBModalBody>\r\n//           <MDBModalFooter>\r\n//             {\r\n//               // Company.codeCompany?\r\n//             <MDBBtn color=\"secondary\" onClick={() => newUser()}>עדכן</MDBBtn>\r\n//             // :<MDBBtn color=\"secondary\" onClick={() => newUser()}>הרשם</MDBBtn>\r\n// }\r\n//           </MDBModalFooter>\r\n//         </MDBModal>\r\n//       </MDBContainer>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\n\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\n\r\nexport default function App() {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleShow}>LAUNCH DEMO MODAL</MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1'>\r\n        <MDBModalDialog>\r\n          <MDBModalContent>\r\n            <MDBModalHeader>\r\n              <MDBModalTitle>Modal title</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>Modal body text goes here.</MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              <MDBBtn>Save changes</MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}