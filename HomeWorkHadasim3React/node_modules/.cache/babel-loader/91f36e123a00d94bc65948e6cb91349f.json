{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\HadasimProject\\\\HomeWorkHadasim3React\\\\src\\\\Components\\\\Garafim.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { getCountWhoVaccinated } from \"../Redux/Vaccinations/VaccinationsThunk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function fetchData() {\n  const data = [];\n\n  for (let i = 1; i <= 4; i++) {\n    const count = await getCountWhoVaccinated(i);\n    data.push(count);\n  }\n\n  setData(data);\n}\n\nfunction Chart({\n  data\n}) {\n  const chartData = {\n    labels: ['חיסון רביעי', 'חיסון שלישי', 'חיסון שני', 'חיסון ראשון'],\n    datasets: [{\n      label: 'תרשים חיסונים',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: data\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Chart;\nexport default function ChartsPage1() {\n  _s();\n\n  const [data, setData] = useState([0, 0, 0, 0]);\n  useEffect(() => {\n    async function fetchData() {\n      const newData = [];\n\n      for (let i = 1; i <= 4; i++) {\n        const count = await getCountWhoVaccinated(i);\n        newData.push(count);\n      }\n\n      setData(newData);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ChartsPage1, \"hy+zZim60ct2zNVuepIdmsqkkyo=\");\n\n_c2 = ChartsPage1;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartsPage1\");","map":{"version":3,"sources":["D:/Programing/HadasimProject/HomeWorkHadasim3React/src/Components/Garafim.jsx"],"names":["React","useState","useEffect","Line","getCountWhoVaccinated","fetchData","data","i","count","push","setData","Chart","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","ChartsPage1","newData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,qBAAT,QAAsC,yCAAtC;;;AACA,eAAeC,SAAf,GAA2B;AACvB,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAMC,KAAK,GAAG,MAAMJ,qBAAqB,CAACG,CAAD,CAAzC;AACAD,IAAAA,IAAI,CAACG,IAAL,CAAUD,KAAV;AACD;;AACDE,EAAAA,OAAO,CAACJ,IAAD,CAAP;AACD;;AACD,SAASK,KAAT,CAAe;AAAEL,EAAAA;AAAF,CAAf,EAAyB;AACvB,QAAMM,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,WAA/B,EAA4C,aAA5C,CADQ;AAEhBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,eADT;AAEEC,MAAAA,eAAe,EAAE,sBAFnB;AAGEC,MAAAA,WAAW,EAAE,oBAHf;AAIEC,MAAAA,WAAW,EAAE,CAJf;AAKEC,MAAAA,oBAAoB,EAAE,sBALxB;AAMEC,MAAAA,gBAAgB,EAAE,oBANpB;AAOEd,MAAAA,IAAI,EAAEA;AAPR,KADQ;AAFM,GAAlB;AAeA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEM;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KArBQD,K;AAuBT,eAAe,SAASU,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACf,IAAD,EAAOI,OAAP,IAAkBT,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeG,SAAf,GAA2B;AACzB,YAAMiB,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,cAAMC,KAAK,GAAG,MAAMJ,qBAAqB,CAACG,CAAD,CAAzC;AACAe,QAAAA,OAAO,CAACb,IAAR,CAAaD,KAAb;AACD;;AACDE,MAAAA,OAAO,CAACY,OAAD,CAAP;AACD;;AACDjB,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAAO,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhBuBe,W;;MAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { getCountWhoVaccinated } from \"../Redux/Vaccinations/VaccinationsThunk\";\r\nasync function fetchData() {\r\n    const data = [];\r\n    for (let i = 1; i <= 4; i++) {\r\n      const count = await getCountWhoVaccinated(i);\r\n      data.push(count);\r\n    }\r\n    setData(data);\r\n  }\r\n  function Chart({ data }) {\r\n    const chartData = {\r\n      labels: ['חיסון רביעי', 'חיסון שלישי', 'חיסון שני', 'חיסון ראשון'],\r\n      datasets: [\r\n        {\r\n          label: 'תרשים חיסונים',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: data,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Line data={chartData} />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default function ChartsPage1() {\r\n    const [data, setData] = useState([0, 0, 0, 0]);\r\n  \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const newData = [];\r\n        for (let i = 1; i <= 4; i++) {\r\n          const count = await getCountWhoVaccinated(i);\r\n          newData.push(count);\r\n        }\r\n        setData(newData);\r\n      }\r\n      fetchData();\r\n    }, []);\r\n  \r\n    return <Chart data={data} />;\r\n  }"]},"metadata":{},"sourceType":"module"}