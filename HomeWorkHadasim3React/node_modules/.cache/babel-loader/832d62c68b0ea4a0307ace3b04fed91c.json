{"ast":null,"code":"import axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { GetAllCustomersOfCompanies, GetAllCustomersByCompany, GetCustomerByCode, AddCustomer, UpdateCustomer, RemoveCustomer } from \"./CustomersAction\";\nexport const CustomersURL = \"http://localhost:21507/api/Customers/\";\nexport const getAllCustomersOfCompanies = async dispatch => {\n  const customersPromise = axios.get(CustomersURL + \"GetAllCustomersOfCompanies\");\n  const response = await customersPromise;\n  const customers = response.data;\n  dispatch(GetAllCustomersOfCompanies(customers));\n  return customers;\n};\nexport const getAllCustomersByCompany = async (dispatch, codeCompany) => {\n  const customersPromise = axios.get(CustomersURL + \"GetAllCustomersByCompany/\" + codeCompany);\n  const response = await customersPromise;\n  const customers = response.data;\n  dispatch(GetAllCustomersByCompany(customers));\n  return customers;\n};\nexport const getCustomerByCode = async (dispatch, codeCustomer) => {\n  const customerPromise = axios.get(CustomersURL + \"GetCustomerByCode/\" + codeCustomer);\n  const response = await customerPromise;\n  const customer = response.data;\n  dispatch(GetCustomerByCode(customer));\n  return customer;\n};\nexport const addCustomer = async (dispatch, codeCompany, nameCustomer, emailCustomer, profileCustomer, calculationCode) => {\n  try {\n    const newCustomer = {\n      codeCompany: codeCompany,\n      nameCustomer: nameCustomer,\n      emailCustomer: emailCustomer,\n      profileCustomer: profileCustomer,\n      calculationCode: calculationCode\n    };\n    const customerPromise = await axios.post(CustomersURL + \"AddCompany\", newCustomer);\n    await dispatch(AddCustomer(customerPromise.data));\n    return customerPromise.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const updateCustomer = async (dispatch, codeCompany, nameCustomer, emailCustomer, profileCustomer, calculationCode) => {\n  const updateCustomer = {\n    codeCompany: codeCompany,\n    nameCustomer: nameCustomer,\n    emailCustomer: emailCustomer,\n    profileCustomer: profileCustomer,\n    calculationCode: calculationCode\n  };\n\n  try {\n    const customerPromise = await axios.put(CompaniesURL + \"/UpdateCustomer/\", updateCustomer);\n    await dispatch(UpdateCustomer(customerPromise.data));\n    const response = await customerPromise;\n    return customerPromise.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const removeCompany = async (dispatch, CodeCustomer) => {\n  try {\n    const companyPromise = await axios.delete(CompaniesURL + \"/RemoveCompany?Id=\" + CodeCustomer);\n    await dispatch(RemoveCompany(companyPromise));\n    const response = await companyPromise.data;\n    return companyPromise.data;\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"sources":["D:/Programing/ExternalProject/ProfileCustomerReact/src/Redux/Customers/CustomersThunk.jsx"],"names":["axios","useDispatch","GetAllCustomersOfCompanies","GetAllCustomersByCompany","GetCustomerByCode","AddCustomer","UpdateCustomer","RemoveCustomer","CustomersURL","getAllCustomersOfCompanies","dispatch","customersPromise","get","response","customers","data","getAllCustomersByCompany","codeCompany","getCustomerByCode","codeCustomer","customerPromise","customer","addCustomer","nameCustomer","emailCustomer","profileCustomer","calculationCode","newCustomer","post","e","console","log","updateCustomer","put","CompaniesURL","removeCompany","CodeCustomer","companyPromise","delete","RemoveCompany"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport {GetAllCustomersOfCompanies,GetAllCustomersByCompany,GetCustomerByCode,AddCustomer,UpdateCustomer,RemoveCustomer } from \"./CustomersAction\";\r\nexport const CustomersURL=\"http://localhost:21507/api/Customers/\"\r\n\r\n \r\n\r\n \r\nexport const getAllCustomersOfCompanies = async (dispatch) => {\r\n    const customersPromise = axios.get(CustomersURL+\"GetAllCustomersOfCompanies\");\r\n    const response = await customersPromise;\r\n    const customers = response.data;\r\n    dispatch(GetAllCustomersOfCompanies(customers))\r\n    return customers;\r\n\r\n}\r\nexport const getAllCustomersByCompany = async (dispatch,codeCompany) => {\r\n    const customersPromise = axios.get(CustomersURL+\"GetAllCustomersByCompany/\"+codeCompany);\r\n    const response = await customersPromise;\r\n    const customers = response.data;\r\n    dispatch(GetAllCustomersByCompany(customers))\r\n    return customers;\r\n\r\n}\r\nexport const getCustomerByCode = async (dispatch,codeCustomer) => {\r\n    const customerPromise = axios.get(CustomersURL+\"GetCustomerByCode/\"+codeCustomer);\r\n    const response = await customerPromise;\r\n    const customer = response.data;\r\n    dispatch(GetCustomerByCode(customer))\r\n    return customer;\r\n\r\n}\r\nexport const addCustomer=async(dispatch,codeCompany,nameCustomer,emailCustomer,profileCustomer,calculationCode)=>\r\n  {   \r\n       try{\r\n           \r\n       const newCustomer={ codeCompany:codeCompany,nameCustomer: nameCustomer,emailCustomer:emailCustomer,profileCustomer:profileCustomer,calculationCode:calculationCode};\r\n       const customerPromise =await axios.post(CustomersURL+\"AddCompany\",newCustomer);\r\n       await  dispatch(AddCustomer(customerPromise.data));\r\n       return customerPromise.data;\r\n       }\r\n       catch(e){\r\n           console.log(e);\r\n       }\r\n       \r\n    }\r\n\r\n\r\n    export const updateCustomer = async (dispatch,codeCompany,nameCustomer,emailCustomer,profileCustomer,calculationCode) => {\r\n        const updateCustomer  = { codeCompany:codeCompany,nameCustomer: nameCustomer,emailCustomer:emailCustomer,profileCustomer:profileCustomer,calculationCode:calculationCode};\r\n        try {\r\n            const customerPromise = await axios.put(CompaniesURL + \"/UpdateCustomer/\", updateCustomer);\r\n            await dispatch(UpdateCustomer(customerPromise.data));\r\n            const response = await customerPromise;\r\n            return customerPromise.data;\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    export const removeCompany = async (dispatch, CodeCustomer) => {\r\n        try {\r\n            const companyPromise = await axios.delete(CompaniesURL + \"/RemoveCompany?Id=\" + CodeCustomer);\r\n            await dispatch(RemoveCompany(companyPromise));\r\n            const response = await companyPromise.data;\r\n            return companyPromise.data;\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}