{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\HadasimProject\\\\HomeWorkHadasim3React\\\\src\\\\Components\\\\UploadImage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UI = () => {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    if (selectedFile && isImageFile(selectedFile)) {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setFile(null);\n      setError(\"Please select a valid image file (JPEG, PNG, or GIF)\");\n    }\n  };\n\n  const handleUpload = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"image\", file);\n\n      try {\n        const response = await fetch(\"https://localhost:44315/api/Users/Upload\", {\n          method: \"POST\",\n          body: formData\n        });\n\n        if (response.ok) {\n          alert(\"Image uploaded successfully\");\n        } else {\n          throw new Error(await response.text());\n        }\n      } catch (ex) {\n        alert(`Error: ${ex.message}`);\n      }\n    } else {\n      setError(\"Please select an image file\");\n    }\n  };\n\n  const isImageFile = file => {\n    const acceptedImageTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n    return file && acceptedImageTypes.includes(file.type);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UI, \"g4In/gal2dmIIDovhnep1NQJW40=\");\n\n_c = UI;\nexport default UI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UI\");","map":{"version":3,"sources":["D:/Programing/HadasimProject/HomeWorkHadasim3React/src/Components/UploadImage.jsx"],"names":["React","useState","UI","file","setFile","error","setError","handleFileChange","event","selectedFile","target","files","isImageFile","handleUpload","formData","FormData","append","response","fetch","method","body","ok","alert","Error","text","ex","message","acceptedImageTypes","includes","type","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,EAAE,GAAC,MAAM;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMM,gBAAgB,GAAIC,KAAD,IAAW;AAClC,UAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB;;AAEA,QAAIF,YAAY,IAAIG,WAAW,CAACH,YAAD,CAA/B,EAA+C;AAC7CL,MAAAA,OAAO,CAACK,YAAD,CAAP;AACAH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAHD,MAGO;AACLF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,sDAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMO,YAAY,GAAG,YAAY;AAC/B,QAAIV,IAAJ,EAAU;AACR,YAAMW,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBb,IAAzB;;AAEA,UAAI;AACF,cAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AACvEC,UAAAA,MAAM,EAAE,MAD+D;AAEvEC,UAAAA,IAAI,EAAEN;AAFiE,SAA7C,CAA5B;;AAKA,YAAIG,QAAQ,CAACI,EAAb,EAAiB;AACfC,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,SAFD,MAEO;AACL,gBAAM,IAAIC,KAAJ,CAAU,MAAMN,QAAQ,CAACO,IAAT,EAAhB,CAAN;AACD;AACF,OAXD,CAWE,OAAOC,EAAP,EAAW;AACXH,QAAAA,KAAK,CAAE,UAASG,EAAE,CAACC,OAAQ,EAAtB,CAAL;AACD;AACF,KAlBD,MAkBO;AACLpB,MAAAA,QAAQ,CAAC,6BAAD,CAAR;AACD;AACF,GAtBD;;AAwBA,QAAMM,WAAW,GAAIT,IAAD,IAAU;AAC5B,UAAMwB,kBAAkB,GAAG,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAA3B;AACA,WAAOxB,IAAI,IAAIwB,kBAAkB,CAACC,QAAnB,CAA4BzB,IAAI,CAAC0B,IAAjC,CAAf;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEtB;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,iBAAI;AAAK,MAAA,KAAK,EAAE;AAAEyB,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,gBAA+BzB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFZ,eAGE;AAAQ,MAAA,OAAO,EAAEQ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApDD;;GAAMX,E;;KAAAA,E;AAsDN,eAAeA,EAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UI=()=>  {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n\r\n    if (selectedFile && isImageFile(selectedFile)) {\r\n      setFile(selectedFile);\r\n      setError(null);\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select a valid image file (JPEG, PNG, or GIF)\");\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", file);\r\n\r\n      try {\r\n        const response = await fetch(\"https://localhost:44315/api/Users/Upload\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert(\"Image uploaded successfully\");\r\n        } else {\r\n          throw new Error(await response.text());\r\n        }\r\n      } catch (ex) {\r\n        alert(`Error: ${ex.message}`);\r\n      }\r\n    } else {\r\n      setError(\"Please select an image file\");\r\n    }\r\n  };\r\n\r\n  const isImageFile = (file) => {\r\n    const acceptedImageTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    return file && acceptedImageTypes.includes(file.type);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UI;"]},"metadata":{},"sourceType":"module"}